Timing is on.
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Unique  (cost=13780.63..13858.02 rows=200 width=147)
   CTE _temp_view_0
     ->  HashAggregate  (cost=4966.77..5286.77 rows=32000 width=16)
           Group Key: f0_8.ps_partkey
           ->  Nested Loop  (cost=11.81..4646.77 rows=32000 width=24)
                 ->  Nested Loop  (cost=11.38..254.72 rows=400 width=8)
                       ->  Seq Scan on nation f0_10  (cost=0.00..1.31 rows=1 width=8)
                             Filter: ((n_name)::text = 'GERMANY'::text)
                       ->  Bitmap Heap Scan on supplier f0_9  (cost=11.38..249.40 rows=400 width=16)
                             Recheck Cond: (s_nationkey = f0_10.n_nationkey)
                             ->  Bitmap Index Scan on fkey_10  (cost=0.00..11.29 rows=400 width=0)
                                   Index Cond: (s_nationkey = f0_10.n_nationkey)
                 ->  Index Scan using fkey_9 on partsupp f0_8  (cost=0.42..10.18 rows=80 width=32)
                       Index Cond: (ps_suppkey = f0_9.s_suppkey)
   CTE _temp_view_1
     ->  Aggregate  (cost=800.00..800.01 rows=1 width=8)
           ->  CTE Scan on _temp_view_0 _temp_view_0_3  (cost=0.00..640.00 rows=32000 width=8)
   ->  Merge Append  (cost=7693.85..7747.69 rows=1346 width=147)
         Sort Key: f0.ps_suppkey, f0_1.s_name, f0_1.s_address, f0_1.s_nationkey, f0_1.s_phone, f0_1.s_acctbal, f0_1.s_comment
         ->  Unique  (cost=885.67..885.69 rows=1 width=147)
               ->  Sort  (cost=885.67..885.68 rows=1 width=147)
                     Sort Key: f0.ps_suppkey, f0_1.s_name, f0_1.s_address, f0_1.s_nationkey, f0_1.s_phone, f0_1.s_acctbal, f0_1.s_comment
                     ->  Nested Loop  (cost=1.73..885.66 rows=1 width=147)
                           Join Filter: (_temp_view_0."A1" > _temp_view_1."A0")
                           ->  Nested Loop  (cost=1.73..885.63 rows=1 width=155)
                                 Join Filter: (f0_1.s_nationkey = f0_2.n_nationkey)
                                 ->  Nested Loop  (cost=1.73..884.30 rows=1 width=155)
                                       ->  Nested Loop  (cost=1.45..884.00 rows=1 width=16)
                                             ->  Hash Join  (cost=1.02..881.03 rows=1 width=24)
                                                   Hash Cond: ((_temp_view_0."A0" = f0_3."A0") AND (_temp_view_0."A1" = f0_3."A1"))
                                                   ->  CTE Scan on _temp_view_0  (cost=0.00..640.00 rows=32000 width=16)
                                                   ->  Hash  (cost=1.01..1.01 rows=1 width=16)
                                                         ->  Seq Scan on rtpcq11 f0_3  (cost=0.00..1.01 rows=1 width=16)
                                             ->  Index Scan using fkey_8 on partsupp f0  (cost=0.42..2.92 rows=4 width=16)
                                                   Index Cond: (ps_partkey = _temp_view_0."A0")
                                       ->  Index Scan using supplier_pkey on supplier f0_1  (cost=0.29..0.30 rows=1 width=147)
                                             Index Cond: (s_suppkey = f0.ps_suppkey)
                                 ->  Seq Scan on nation f0_2  (cost=0.00..1.31 rows=1 width=8)
                                       Filter: ((n_name)::text = 'GERMANY'::text)
                           ->  CTE Scan on _temp_view_1  (cost=0.00..0.02 rows=1 width=8)
         ->  Unique  (cost=6808.16..6835.06 rows=1345 width=147)
               ->  Sort  (cost=6808.16..6811.53 rows=1345 width=147)
                     Sort Key: f0_4.ps_suppkey, f0_5.s_name, f0_5.s_address, f0_5.s_nationkey, f0_5.s_phone, f0_5.s_acctbal, f0_5.s_comment
                     ->  Hash Join  (cost=5927.85..6738.27 rows=1345 width=147)
                           Hash Cond: (_temp_view_0_1."A0" = f0_4.ps_partkey)
                           ->  CTE Scan on _temp_view_0 _temp_view_0_1  (cost=0.00..640.00 rows=32000 width=8)
                           ->  Hash  (cost=5527.85..5527.85 rows=32000 width=155)
                                 ->  Nested Loop  (cost=12.84..5527.85 rows=32000 width=155)
                                       ->  Nested Loop  (cost=12.41..1135.79 rows=400 width=147)
                                             ->  Nested Loop  (cost=1.02..882.39 rows=1 width=8)
                                                   ->  Nested Loop  (cost=1.02..881.07 rows=1 width=0)
                                                         Join Filter: (_temp_view_0_2."A1" > _temp_view_1_1."A0")
                                                         ->  Hash Join  (cost=1.02..881.03 rows=1 width=8)
                                                               Hash Cond: ((_temp_view_0_2."A0" = f0_7."A0") AND (_temp_view_0_2."A1" = f0_7."A1"))
                                                               ->  CTE Scan on _temp_view_0 _temp_view_0_2  (cost=0.00..640.00 rows=32000 width=16)
                                                               ->  Hash  (cost=1.01..1.01 rows=1 width=16)
                                                                     ->  Seq Scan on rtpcq11 f0_7  (cost=0.00..1.01 rows=1 width=16)
                                                         ->  CTE Scan on _temp_view_1 _temp_view_1_1  (cost=0.00..0.02 rows=1 width=8)
                                                   ->  Seq Scan on nation f0_6  (cost=0.00..1.31 rows=1 width=8)
                                                         Filter: ((n_name)::text = 'GERMANY'::text)
                                             ->  Bitmap Heap Scan on supplier f0_5  (cost=11.38..249.40 rows=400 width=147)
                                                   Recheck Cond: (s_nationkey = f0_6.n_nationkey)
                                                   ->  Bitmap Index Scan on fkey_10  (cost=0.00..11.29 rows=400 width=0)
                                                         Index Cond: (s_nationkey = f0_6.n_nationkey)
                                       ->  Index Scan using fkey_9 on partsupp f0_4  (cost=0.42..10.18 rows=80 width=16)
                                             Index Cond: (ps_suppkey = f0_5.s_suppkey)
(66 rows)

Time: 10.133 ms