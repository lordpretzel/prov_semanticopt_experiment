Timing is on.
                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Unique  (cost=42249.20..42249.22 rows=1 width=157)
   ->  Sort  (cost=42249.20..42249.20 rows=1 width=157)
         Sort Key: f0_7.ps_partkey, f0_7.ps_suppkey, f0_7.ps_availqty, f0_7.ps_supplycost, f0_7.ps_comment
         ->  Nested Loop  (cost=35904.69..42249.19 rows=1 width=157)
               Join Filter: ((date_part('year'::text, (f0_11.o_orderdate)::timestamp without time zone)) = date_part('year'::text, (f0_5.o_orderdate)::timestamp without time zone))
               ->  Nested Loop  (cost=35904.26..42248.22 rows=2 width=181)
                     Join Filter: ((f0.p_partkey = f0_2.l_partkey) AND (f0_1.s_suppkey = f0_2.l_suppkey) AND (((f0_2.l_extendedprice * ('1'::double precision - f0_2.l_discount)) - (f0_3.ps_supplycost * f0_2.l_quantity)) = (((f0_9.l_extendedprice * ('1'::double precision - f0_9.l_discount)) - (f0_7.ps_supplycost * f0_9.l_quantity)))))
                     ->  Nested Loop  (cost=35903.83..42176.33 rows=61 width=221)
                           ->  Nested Loop  (cost=35903.41..39369.30 rows=6061 width=213)
                                 ->  Nested Loop  (cost=35902.99..38534.81 rows=76 width=189)
                                       ->  Nested Loop  (cost=35895.12..38484.24 rows=1 width=189)
                                             Join Filter: ((f0_12.n_name)::text = (f0_4.n_name)::text)
                                             ->  Index Scan using nation_pkey on nation f0_4  (cost=0.14..12.51 rows=25 width=16)
                                             ->  Materialize  (cost=35894.98..38470.98 rows=2 width=197)
                                                   ->  Hash Join  (cost=35894.98..38470.97 rows=2 width=197)
                                                         Hash Cond: (((f0_12.n_name)::text = (f0_6."A0")::text) AND ((date_part('year'::text, (f0_11.o_orderdate)::timestamp without time zone)) = f0_6."A1"))
                                                         ->  HashAggregate  (cost=35893.96..37409.23 rows=60611 width=181)
                                                               Group Key: f0_7.ps_partkey, f0_7.ps_suppkey, f0_7.ps_availqty, f0_7.ps_supplycost, f0_7.ps_comment, f0_12.n_name, (date_part('year'::text, (f0_11.o_orderdate)::timestamp without time zone)), (((f0_9.l_extendedprice * ('1'::double precision - f0_9.l_discount)) - (f0_7.ps_supplycost * f0_9.l_quantity)))
                                                               ->  Gather  (cost=1454.85..34681.74 rows=60611 width=181)
                                                                     Workers Planned: 2
                                                                     ->  Nested Loop  (cost=454.85..27620.64 rows=25255 width=181)
                                                                           ->  Nested Loop  (cost=454.42..15452.97 rows=25255 width=197)
                                                                                 ->  Hash Join  (cost=453.99..11543.81 rows=3367 width=181)
                                                                                       Hash Cond: (f0_10.s_nationkey = f0_12.n_nationkey)
                                                                                       ->  Hash Join  (cost=452.43..11531.91 rows=3367 width=181)
                                                                                             Hash Cond: (f0_7.ps_suppkey = f0_10.s_suppkey)
                                                                                             ->  Nested Loop  (cost=0.42..11071.07 rows=3367 width=165)
                                                                                                   ->  Parallel Seq Scan on part f0_8  (cost=0.00..5116.67 rows=842 width=8)
                                                                                                         Filter: ((p_name)::text ~~ '%green%'::text)
                                                                                                   ->  Index Scan using fkey_8 on partsupp f0_7  (cost=0.42..7.03 rows=4 width=157)
                                                                                                         Index Cond: (ps_partkey = f0_8.p_partkey)
                                                                                             ->  Hash  (cost=327.00..327.00 rows=10000 width=16)
                                                                                                   ->  Seq Scan on supplier f0_10  (cost=0.00..327.00 rows=10000 width=16)
                                                                                       ->  Hash  (cost=1.25..1.25 rows=25 width=16)
                                                                                             ->  Seq Scan on nation f0_12  (cost=0.00..1.25 rows=25 width=16)
                                                                                 ->  Index Scan using fkey_3 on lineitem f0_9  (cost=0.43..1.15 rows=1 width=48)
                                                                                       Index Cond: ((l_partkey = f0_7.ps_partkey) AND (l_suppkey = f0_7.ps_suppkey))
                                                                           ->  Index Scan using orders_pkey on orders f0_11  (cost=0.43..0.47 rows=1 width=12)
                                                                                 Index Cond: (o_orderkey = f0_9.l_orderkey)
                                                         ->  Hash  (cost=1.01..1.01 rows=1 width=16)
                                                               ->  Seq Scan on rtpcq09 f0_6  (cost=0.00..1.01 rows=1 width=16)
                                       ->  Bitmap Heap Scan on supplier f0_1  (cost=7.87..46.57 rows=400 width=16)
                                             Recheck Cond: (s_nationkey = f0_4.n_nationkey)
                                             ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                   Index Cond: (s_nationkey = f0_4.n_nationkey)
                                 ->  Index Scan using fkey_9 on partsupp f0_3  (cost=0.42..10.18 rows=80 width=24)
                                       Index Cond: (ps_suppkey = f0_1.s_suppkey)
                           ->  Index Scan using part_pkey on part f0  (cost=0.42..0.46 rows=1 width=8)
                                 Index Cond: (p_partkey = f0_3.ps_partkey)
                                 Filter: ((p_name)::text ~~ '%green%'::text)
                     ->  Index Scan using fkey_3 on lineitem f0_2  (cost=0.43..1.15 rows=1 width=48)
                           Index Cond: ((l_partkey = f0_3.ps_partkey) AND (l_suppkey = f0_3.ps_suppkey))
               ->  Index Scan using orders_pkey on orders f0_5  (cost=0.43..0.47 rows=1 width=12)
                     Index Cond: (o_orderkey = f0_2.l_orderkey)
(54 rows)

Time: 38.730 ms