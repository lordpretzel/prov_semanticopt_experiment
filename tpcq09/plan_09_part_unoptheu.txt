Timing is on.
                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Unique  (cost=39395.53..39395.56 rows=1 width=125)
   ->  Sort  (cost=39395.53..39395.54 rows=1 width=125)
         Sort Key: f0.p_partkey, f0.p_name, f0.p_mfgr, f0.p_brand, f0.p_type, f0.p_size, f0.p_container, f0.p_retailprice, f0.p_comment
         ->  Gather  (cost=33546.47..39395.52 rows=1 width=125)
               Workers Planned: 2
               ->  Parallel Hash Join  (cost=32546.47..38395.42 rows=1 width=125)
                     Hash Cond: (((f0_10.n_name)::text = (f0_4.n_name)::text) AND (f0_12."A1" = date_part('year'::text, (f0_5.o_orderdate)::timestamp without time zone)) AND (((f0_8.l_extendedprice * ('1'::double precision - f0_8.l_discount)) - (f0_9.ps_supplycost * f0_8.l_quantity)) = ((f0_2.l_extendedprice * ('1'::double precision - f0_2.l_discount)) - (f0_3.ps_supplycost * f0_2.l_quantity))))
                     ->  Nested Loop  (cost=4845.86..10612.70 rows=5 width=60)
                           Join Filter: (f0_12."A1" = date_part('year'::text, (f0_11.o_orderdate)::timestamp without time zone))
                           ->  Nested Loop  (cost=4845.43..10123.57 rows=1010 width=64)
                                 Join Filter: ((f0_6.p_partkey = f0_8.l_partkey) AND (f0_7.s_suppkey = f0_8.l_suppkey))
                                 ->  Hash Join  (cost=4845.00..9966.15 rows=135 width=64)
                                       Hash Cond: (f0_6.p_partkey = f0_9.ps_partkey)
                                       ->  Parallel Seq Scan on part f0_6  (cost=0.00..5116.67 rows=842 width=8)
                                             Filter: ((p_name)::text ~~ '%green%'::text)
                                       ->  Hash  (cost=4445.00..4445.00 rows=32000 width=56)
                                             ->  Nested Loop  (cost=9.31..4445.00 rows=32000 width=56)
                                                   ->  Nested Loop  (cost=8.89..52.94 rows=400 width=32)
                                                         ->  Hash Join  (cost=1.02..2.38 rows=1 width=32)
                                                               Hash Cond: ((f0_10.n_name)::text = (f0_12."A0")::text)
                                                               ->  Seq Scan on nation f0_10  (cost=0.00..1.25 rows=25 width=16)
                                                               ->  Hash  (cost=1.01..1.01 rows=1 width=16)
                                                                     ->  Seq Scan on rtpcq09 f0_12  (cost=0.00..1.01 rows=1 width=16)
                                                         ->  Bitmap Heap Scan on supplier f0_7  (cost=7.87..46.57 rows=400 width=16)
                                                               Recheck Cond: (s_nationkey = f0_10.n_nationkey)
                                                               ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                                     Index Cond: (s_nationkey = f0_10.n_nationkey)
                                                   ->  Index Scan using fkey_9 on partsupp f0_9  (cost=0.42..10.18 rows=80 width=24)
                                                         Index Cond: (ps_suppkey = f0_7.s_suppkey)
                                 ->  Index Scan using fkey_3 on lineitem f0_8  (cost=0.43..1.15 rows=1 width=48)
                                       Index Cond: ((l_partkey = f0_9.ps_partkey) AND (l_suppkey = f0_9.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders f0_11  (cost=0.43..0.47 rows=1 width=12)
                                 Index Cond: (o_orderkey = f0_8.l_orderkey)
                     ->  Parallel Hash  (cost=27258.65..27258.65 rows=25255 width=169)
                           ->  Nested Loop  (cost=454.85..27258.65 rows=25255 width=169)
                                 ->  Nested Loop  (cost=454.42..15469.80 rows=25255 width=173)
                                       Join Filter: ((f0.p_partkey = f0_2.l_partkey) AND (f0_1.s_suppkey = f0_2.l_suppkey))
                                       ->  Hash Join  (cost=453.99..11543.81 rows=3367 width=165)
                                             Hash Cond: (f0_1.s_nationkey = f0_4.n_nationkey)
                                             ->  Hash Join  (cost=452.43..11531.91 rows=3367 width=165)
                                                   Hash Cond: (f0_3.ps_suppkey = f0_1.s_suppkey)
                                                   ->  Nested Loop  (cost=0.42..11071.07 rows=3367 width=149)
                                                         ->  Parallel Seq Scan on part f0  (cost=0.00..5116.67 rows=842 width=125)
                                                               Filter: ((p_name)::text ~~ '%green%'::text)
                                                         ->  Index Scan using fkey_8 on partsupp f0_3  (cost=0.42..7.03 rows=4 width=24)
                                                               Index Cond: (ps_partkey = f0.p_partkey)
                                                   ->  Hash  (cost=327.00..327.00 rows=10000 width=16)
                                                         ->  Seq Scan on supplier f0_1  (cost=0.00..327.00 rows=10000 width=16)
                                             ->  Hash  (cost=1.25..1.25 rows=25 width=16)
                                                   ->  Seq Scan on nation f0_4  (cost=0.00..1.25 rows=25 width=16)
                                       ->  Index Scan using fkey_3 on lineitem f0_2  (cost=0.43..1.15 rows=1 width=48)
                                             Index Cond: ((l_partkey = f0_3.ps_partkey) AND (l_suppkey = f0_3.ps_suppkey))
                                 ->  Index Scan using orders_pkey on orders f0_5  (cost=0.43..0.47 rows=1 width=12)
                                       Index Cond: (o_orderkey = f0_2.l_orderkey)
(54 rows)

Time: 18.962 ms