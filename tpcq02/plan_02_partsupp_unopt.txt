Timing is on.


 Unique  (cost=9418.24..9418.26 rows=1 width=157)
   CTE _temp_view_0
     ->  Unique  (cost=9279.14..9294.86 rows=629 width=170)
           ->  Sort  (cost=9279.14..9280.71 rows=629 width=170)
                 Sort Key: f0_8.s_acctbal, f0_8.s_name, f0_6.n_name, f0_9.p_partkey, f0_10.ps_supplycost, f0_9.p_mfgr, f0_8.s_address, f0_8.s_phone, f0_8.s_comment
                 ->  Gather  (cost=1280.71..9249.90 rows=629 width=170)
                       Workers Planned: 2
                       ->  Hash Join  (cost=280.71..8187.00 rows=262 width=170)
                             Hash Cond: (f0_10.ps_suppkey = f0_8.s_suppkey)
                             ->  Nested Loop  (cost=0.42..7899.18 rows=1310 width=39)
                                   ->  Parallel Seq Scan on part f0_9  (cost=0.00..5325.00 rows=328 width=23)
                                         Filter: (((p_type)::text ~~ '%BRASS'::text) AND (p_size = 15))
                                   ->  Index Scan using fkey_8 on partsupp f0_10  (cost=0.42..7.81 rows=4 width=24)
                                         Index Cond: (ps_partkey = f0_9.p_partkey)
                             ->  Hash  (cost=255.29..255.29 rows=2000 width=147)
                                   ->  Nested Loop  (cost=8.94..255.29 rows=2000 width=147)
                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=16)
                                               Hash Cond: (f0_6.n_regionkey = f0_7.r_regionkey)
                                               ->  Seq Scan on nation f0_6  (cost=0.00..1.25 rows=25 width=24)
                                               ->  Hash  (cost=1.06..1.06 rows=1 width=8)
                                                     ->  Seq Scan on region f0_7  (cost=0.00..1.06 rows=1 width=8)
                                                           Filter: ((r_name)::text = 'EUROPE'::text)
                                         ->  Bitmap Heap Scan on supplier f0_8  (cost=7.87..46.57 rows=400 width=147)
                                               Recheck Cond: (s_nationkey = f0_6.n_nationkey)
                                               ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                     Index Cond: (s_nationkey = f0_6.n_nationkey)
   CTE _temp_view_2
     ->  HashAggregate  (cost=15.72..17.73 rows=200 width=16)
           Group Key: _temp_view_0_3."A3"
           ->  CTE Scan on _temp_view_0 _temp_view_0_3  (cost=0.00..12.58 rows=629 width=16)
   CTE _temp_view_5
     ->  Seq Scan on rtpcq02 f0_11  (cost=0.00..1.01 rows=1 width=139)
   CTE _temp_view_4
     ->  HashAggregate  (cost=0.04..0.05 rows=1 width=594)
           Group Key: _temp_view_5.x1, _temp_view_5.x2, _temp_view_5.x3, _temp_view_5.x4, _temp_view_5.x5, _temp_view_5.x6, _temp_view_5.x7, _temp_view_5.x8, _temp_view_5.x9
           ->  CTE Scan on _temp_view_5  (cost=0.00..0.02 rows=1 width=594)
   ->  Sort  (cost=104.59..104.60 rows=1 width=157)
         Sort Key: f0_3.p_partkey, f0_2.s_suppkey, f0_4.ps_availqty, f0_4.ps_supplycost, f0_4.ps_comment
         ->  Nested Loop  (cost=94.40..104.58 rows=1 width=157)
               Join Filter: ((_temp_view_0."A5")::text = (f0_3.p_mfgr)::text)
               ->  Nested Loop  (cost=93.98..104.11 rows=1 width=233)
                     Join Filter: ((f0.n_nationkey = f0_2.s_nationkey) AND (_temp_view_0."A0" = f0_2.s_acctbal) AND ((_temp_view_0."A1")::text = (f0_2.s_name)::text) AND ((_temp_view_0."A6")::text = (f0_2.s_address)::text) AND ((_temp_view_0."A7")::text = (f0_2.s_phone)::text) AND ((_temp_view_0."A8")::text = (f0_2.s_comment)::text))
                     ->  Nested Loop  (cost=93.69..103.78 rows=1 width=683)
                           ->  Nested Loop  (cost=93.27..95.26 rows=1 width=534)
                                 Join Filter: ((f0.n_name)::text = (_temp_view_0."A2")::text)
                                 ->  Unique  (cost=92.19..92.46 rows=4 width=594)
                                       ->  Merge Append  (cost=92.19..92.37 rows=4 width=594)
                                             Sort Key: _temp_view_0."A0", _temp_view_0."A1", _temp_view_0."A2", _temp_view_0."A3", _temp_view_0."A4", _temp_view_0."A5", _temp_view_0."A6", _temp_view_0."A7", _temp_view_0."A8"
                                             ->  Unique  (cost=53.60..53.68 rows=3 width=594)
                                                   ->  Sort  (cost=53.60..53.61 rows=3 width=594)
                                                         Sort Key: _temp_view_0."A0", _temp_view_0."A1", _temp_view_0."A2", _temp_view_0."A3", _temp_view_0."A4", _temp_view_0."A5", _temp_view_0."A6", _temp_view_0."A7", _temp_view_0."A8"
                                                         ->  Hash Join  (cost=38.61..53.58 rows=3 width=594)
                                                               Hash Cond: (_temp_view_0."A3" = f0_5."A0")
                                                               ->  CTE Scan on _temp_view_0  (cost=0.00..12.58 rows=629 width=594)
                                                               ->  Hash  (cost=38.60..38.60 rows=1 width=8)
                                                                     ->  Subquery Scan on f0_5  (cost=38.58..38.60 rows=1 width=8)
                                                                           ->  Unique  (cost=38.58..38.59 rows=1 width=16)
                                                                                 ->  Sort  (cost=38.58..38.58 rows=1 width=16)
                                                                                       Sort Key: _temp_view_0_1."A3", _temp_view_0_1."A4"
                                                                                       ->  Nested Loop  (cost=0.04..38.57 rows=1 width=16)
                                                                                             Join Filter: ((_temp_view_2."A0" = _temp_view_0_1."A3") AND (_temp_view_2."A1" = _temp_view_0_1."A4") AND (_temp_view_4."A0" = _temp_view_0_1."A0") AND ((_temp_view_4."A1")::text = (_temp_view_0_1."A1")::text) AND ((_temp_view_4."A2")::text = (_temp_view_0_1."A2")::text) AND ((_temp_view_4."A5")::text = (_temp_view_0_1."A5")::text) AND ((_temp_view_4."A6")::text = (_temp_view_0_1."A6")::text) AND ((_temp_view_4."A7")::text = (_temp_view_0_1."A7")::text) AND ((_temp_view_4."A8")::text = (_temp_view_0_1."A8")::text))
                                                                                             ->  Hash Join  (cost=0.04..5.54 rows=1 width=610)
                                                                                                   Hash Cond: ((_temp_view_2."A0" = _temp_view_4."A3") AND (_temp_view_2."A1" = _temp_view_4."A4"))
                                                                                                   ->  CTE Scan on _temp_view_2  (cost=0.00..4.00 rows=200 width=16)
                                                                                                   ->  Hash  (cost=0.02..0.02 rows=1 width=594)
                                                                                                         ->  CTE Scan on _temp_view_4  (cost=0.00..0.02 rows=1 width=594)
                                                                                             ->  CTE Scan on _temp_view_0 _temp_view_0_1  (cost=0.00..12.58 rows=629 width=594)
                                             ->  Unique  (cost=38.58..38.60 rows=1 width=594)
                                                   ->  Sort  (cost=38.58..38.58 rows=1 width=594)
                                                         Sort Key: _temp_view_0_2."A0", _temp_view_0_2."A1", _temp_view_0_2."A2", _temp_view_0_2."A3", _temp_view_0_2."A4", _temp_view_0_2."A5", _temp_view_0_2."A6", _temp_view_0_2."A7", _temp_view_0_2."A8"
                                                         ->  Nested Loop  (cost=0.04..38.57 rows=1 width=594)
                                                               Join Filter: ((_temp_view_2_1."A0" = _temp_view_0_2."A3") AND (_temp_view_2_1."A1" = _temp_view_0_2."A4") AND (_temp_view_4_1."A0" = _temp_view_0_2."A0") AND ((_temp_view_4_1."A1")::text = (_temp_view_0_2."A1")::text) AND ((_temp_view_4_1."A2")::text = (_temp_view_0_2."A2")::text) AND ((_temp_view_4_1."A5")::text = (_temp_view_0_2."A5")::text) AND ((_temp_view_4_1."A6")::text = (_temp_view_0_2."A6")::text) AND ((_temp_view_4_1."A7")::text = (_temp_view_0_2."A7")::text) AND ((_temp_view_4_1."A8")::text = (_temp_view_0_2."A8")::text))
                                                               ->  Hash Join  (cost=0.04..5.54 rows=1 width=610)
                                                                     Hash Cond: ((_temp_view_2_1."A0" = _temp_view_4_1."A3") AND (_temp_view_2_1."A1" = _temp_view_4_1."A4"))
                                                                     ->  CTE Scan on _temp_view_2 _temp_view_2_1  (cost=0.00..4.00 rows=200 width=16)
                                                                     ->  Hash  (cost=0.02..0.02 rows=1 width=594)
                                                                           ->  CTE Scan on _temp_view_4 _temp_view_4_1  (cost=0.00..0.02 rows=1 width=594)
                                                               ->  CTE Scan on _temp_view_0 _temp_view_0_2  (cost=0.00..12.58 rows=629 width=594)
                                 ->  Materialize  (cost=1.07..2.47 rows=5 width=16)
                                       ->  Hash Join  (cost=1.07..2.45 rows=5 width=16)
                                             Hash Cond: (f0.n_regionkey = f0_1.r_regionkey)
                                             ->  Seq Scan on nation f0  (cost=0.00..1.25 rows=25 width=24)
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=8)
                                                   ->  Seq Scan on region f0_1  (cost=0.00..1.06 rows=1 width=8)
                                                         Filter: ((r_name)::text = 'EUROPE'::text)
                           ->  Index Scan using fkey_8 on partsupp f0_4  (cost=0.42..8.51 rows=1 width=157)
                                 Index Cond: (ps_partkey = _temp_view_0."A3")
                                 Filter: (_temp_view_0."A4" = ps_supplycost)
                     ->  Index Scan using supplier_pkey on supplier f0_2  (cost=0.29..0.30 rows=1 width=147)
                           Index Cond: (s_suppkey = f0_4.ps_suppkey)
               ->  Index Scan using part_pkey on part f0_3  (cost=0.42..0.47 rows=1 width=23)
                     Index Cond: (p_partkey = f0_4.ps_partkey)
                     Filter: (((p_type)::text ~~ '%BRASS'::text) AND (p_size = 15))
(93 rows)

Time: 15.418 ms