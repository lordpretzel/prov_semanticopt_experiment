Timing is on.
                                                                                                                                                                                QUERY PLAN                                                                                                                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Unique  (cost=629.86..629.89 rows=2 width=99)
   ->  Sort  (cost=629.86..629.87 rows=2 width=99)
         Sort Key: f0.n_nationkey, f0.n_name, f0.n_regionkey, f0.n_comment
         ->  Append  (cost=11.11..629.85 rows=2 width=99)
               ->  Unique  (cost=11.11..11.12 rows=1 width=99)
                     ->  Sort  (cost=11.11..11.11 rows=1 width=99)
                           Sort Key: f0.n_nationkey, f0.n_name, f0.n_regionkey, f0.n_comment
                           ->  Nested Loop  (cost=0.85..11.10 rows=1 width=99)
                                 Join Filter: (f0.n_regionkey = f0_2.r_regionkey)
                                 ->  Nested Loop  (cost=0.85..10.02 rows=1 width=99)
                                       Join Filter: ((f0_4."A2")::text = (f0.n_name)::text)
                                       ->  Nested Loop  (cost=0.71..9.85 rows=1 width=15)
                                             Join Filter: ((f0_4."A0" = f0_1.s_acctbal) AND ((f0_4."A1")::text = (f0_1.s_name)::text) AND ((f0_4."A6")::text = (f0_1.s_address)::text) AND ((f0_4."A7")::text = (f0_1.s_phone)::text) AND ((f0_4."A8")::text = (f0_1.s_comment)::text))
                                             ->  Nested Loop  (cost=0.42..9.53 rows=1 width=116)
                                                   ->  Seq Scan on rtpcq02 f0_4  (cost=0.00..1.01 rows=1 width=124)
                                                   ->  Index Scan using fkey_8 on partsupp f0_3  (cost=0.42..8.51 rows=1 width=24)
                                                         Index Cond: (ps_partkey = f0_4."A3")
                                                         Filter: (f0_4."A4" = ps_supplycost)
                                             ->  Index Scan using supplier_pkey on supplier f0_1  (cost=0.29..0.30 rows=1 width=147)
                                                   Index Cond: (s_suppkey = f0_3.ps_suppkey)
                                       ->  Index Scan using nation_pkey on nation f0  (cost=0.14..0.16 rows=1 width=99)
                                             Index Cond: (n_nationkey = f0_1.s_nationkey)
                                 ->  Seq Scan on region f0_2  (cost=0.00..1.06 rows=1 width=8)
                                       Filter: ((r_name)::text = 'EUROPE'::text)
               ->  Unique  (cost=618.69..618.70 rows=1 width=99)
                     ->  Sort  (cost=618.69..618.69 rows=1 width=99)
                           Sort Key: f0_5.n_nationkey, f0_5.n_name, f0_5.n_regionkey, f0_5.n_comment
                           ->  Nested Loop  (cost=315.50..618.68 rows=1 width=99)
                                 Join Filter: (f0_8.ps_partkey = f0_14."A3")
                                 ->  Nested Loop  (cost=315.50..617.65 rows=1 width=123)
                                       Join Filter: (f0_11.s_suppkey = f0_13.ps_suppkey)
                                       ->  Nested Loop  (cost=315.07..617.03 rows=1 width=131)
                                             ->  Nested Loop  (cost=314.65..616.57 rows=1 width=123)
                                                   ->  Hash Join  (cost=314.23..605.59 rows=1 width=115)
                                                         Hash Cond: (((f0_5.n_name)::text = (f0_9.n_name)::text) AND ((f0_6.s_name)::text = (f0_11.s_name)::text) AND ((f0_6.s_address)::text = (f0_11.s_address)::text) AND ((f0_6.s_phone)::text = (f0_11.s_phone)::text) AND (f0_6.s_acctbal = f0_11.s_acctbal) AND ((f0_6.s_comment)::text = (f0_11.s_comment)::text))
                                                         ->  Nested Loop  (cost=8.94..255.29 rows=2000 width=238)
                                                               ->  Hash Join  (cost=1.07..2.45 rows=5 width=99)
                                                                     Hash Cond: (f0_5.n_regionkey = f0_7.r_regionkey)
                                                                     ->  Seq Scan on nation f0_5  (cost=0.00..1.25 rows=25 width=99)
                                                                     ->  Hash  (cost=1.06..1.06 rows=1 width=8)
                                                                           ->  Seq Scan on region f0_7  (cost=0.00..1.06 rows=1 width=8)
                                                                                 Filter: ((r_name)::text = 'EUROPE'::text)
                                                               ->  Bitmap Heap Scan on supplier f0_6  (cost=7.87..46.57 rows=400 width=147)
                                                                     Recheck Cond: (s_nationkey = f0_5.n_nationkey)
                                                                     ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                                           Index Cond: (s_nationkey = f0_5.n_nationkey)
                                                         ->  Hash  (cost=255.29..255.29 rows=2000 width=147)
                                                               ->  Nested Loop  (cost=8.94..255.29 rows=2000 width=147)
                                                                     ->  Hash Join  (cost=1.07..2.45 rows=5 width=16)
                                                                           Hash Cond: (f0_9.n_regionkey = f0_10.r_regionkey)
                                                                           ->  Seq Scan on nation f0_9  (cost=0.00..1.25 rows=25 width=24)
                                                                           ->  Hash  (cost=1.06..1.06 rows=1 width=8)
                                                                                 ->  Seq Scan on region f0_10  (cost=0.00..1.06 rows=1 width=8)
                                                                                       Filter: ((r_name)::text = 'EUROPE'::text)
                                                                     ->  Bitmap Heap Scan on supplier f0_11  (cost=7.87..46.57 rows=400 width=147)
                                                                           Recheck Cond: (s_nationkey = f0_9.n_nationkey)
                                                                           ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                                                 Index Cond: (s_nationkey = f0_9.n_nationkey)
                                                   ->  Index Scan using fkey_9 on partsupp f0_8  (cost=0.42..10.18 rows=80 width=24)
                                                         Index Cond: (ps_suppkey = f0_6.s_suppkey)
                                             ->  Index Scan using part_pkey on part f0_12  (cost=0.42..0.47 rows=1 width=8)
                                                   Index Cond: (p_partkey = f0_8.ps_partkey)
                                                   Filter: (((p_type)::text ~~ '%BRASS'::text) AND (p_size = 15))
                                       ->  Index Scan using fkey_8 on partsupp f0_13  (cost=0.42..0.61 rows=1 width=24)
                                             Index Cond: (ps_partkey = f0_8.ps_partkey)
                                             Filter: (f0_8.ps_supplycost = ps_supplycost)
                                 ->  Seq Scan on rtpcq02 f0_14  (cost=0.00..1.01 rows=1 width=8)
(67 rows)

Time: 19.487 ms