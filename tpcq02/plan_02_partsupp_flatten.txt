Timing is on.
                                                                                                                                                                                                                                   QUERY PLAN                                                                                                                                                                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Unique  (cost=9982.89..9982.92 rows=2 width=157)
   CTE _temp_view_0
     ->  GroupAggregate  (cost=9330.39..9337.11 rows=200 width=16)
           Group Key: f0_22."A3"
           ->  Sort  (cost=9330.39..9331.96 rows=629 width=16)
                 Sort Key: f0_22."A3"
                 ->  Subquery Scan on f0_22  (cost=9279.14..9301.15 rows=629 width=16)
                       ->  Unique  (cost=9279.14..9294.86 rows=629 width=170)
                             ->  Sort  (cost=9279.14..9280.71 rows=629 width=170)
                                   Sort Key: f0_25.s_acctbal, f0_25.s_name, f0_23.n_name, f0_26.p_partkey, f0_27.ps_supplycost, f0_26.p_mfgr, f0_25.s_address, f0_25.s_phone, f0_25.s_comment
                                   ->  Gather  (cost=1280.71..9249.90 rows=629 width=170)
                                         Workers Planned: 2
                                         ->  Hash Join  (cost=280.71..8187.00 rows=262 width=170)
                                               Hash Cond: (f0_27.ps_suppkey = f0_25.s_suppkey)
                                               ->  Nested Loop  (cost=0.42..7899.18 rows=1310 width=39)
                                                     ->  Parallel Seq Scan on part f0_26  (cost=0.00..5325.00 rows=328 width=23)
                                                           Filter: (((p_type)::text ~~ '%BRASS'::text) AND (p_size = 15))
                                                     ->  Index Scan using fkey_8 on partsupp f0_27  (cost=0.42..7.81 rows=4 width=24)
                                                           Index Cond: (ps_partkey = f0_26.p_partkey)
                                               ->  Hash  (cost=255.29..255.29 rows=2000 width=147)
                                                     ->  Nested Loop  (cost=8.94..255.29 rows=2000 width=147)
                                                           ->  Hash Join  (cost=1.07..2.45 rows=5 width=16)
                                                                 Hash Cond: (f0_23.n_regionkey = f0_24.r_regionkey)
                                                                 ->  Seq Scan on nation f0_23  (cost=0.00..1.25 rows=25 width=24)
                                                                 ->  Hash  (cost=1.06..1.06 rows=1 width=8)
                                                                       ->  Seq Scan on region f0_24  (cost=0.00..1.06 rows=1 width=8)
                                                                             Filter: ((r_name)::text = 'EUROPE'::text)
                                                           ->  Bitmap Heap Scan on supplier f0_25  (cost=7.87..46.57 rows=400 width=147)
                                                                 Recheck Cond: (s_nationkey = f0_23.n_nationkey)
                                                                 ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                                       Index Cond: (s_nationkey = f0_23.n_nationkey)
   ->  Sort  (cost=645.78..645.79 rows=2 width=157)
         Sort Key: f0_3.p_partkey, f0_2.s_suppkey, f0_4.ps_availqty, f0_4.ps_supplycost, f0_4.ps_comment
         ->  Append  (cost=16.93..645.77 rows=2 width=157)
               ->  Unique  (cost=16.93..16.95 rows=1 width=157)
                     ->  Sort  (cost=16.93..16.93 rows=1 width=157)
                           Sort Key: f0_3.p_partkey, f0_2.s_suppkey, f0_4.ps_availqty, f0_4.ps_supplycost, f0_4.ps_comment
                           ->  Nested Loop  (cost=2.29..16.92 rows=1 width=157)
                                 Join Filter: ((f0_5."A5")::text = (f0_3.p_mfgr)::text)
                                 ->  Nested Loop  (cost=1.87..16.44 rows=1 width=188)
                                       Join Filter: (f0.n_regionkey = f0_1.r_regionkey)
                                       ->  Nested Loop  (cost=1.87..15.37 rows=1 width=196)
                                             Join Filter: ((f0_5."A2")::text = (f0.n_name)::text)
                                             ->  Nested Loop  (cost=1.73..15.20 rows=1 width=203)
                                                   Join Filter: ((f0_5."A0" = f0_2.s_acctbal) AND ((f0_5."A1")::text = (f0_2.s_name)::text) AND ((f0_5."A6")::text = (f0_2.s_address)::text) AND ((f0_5."A7")::text = (f0_2.s_phone)::text) AND ((f0_5."A8")::text = (f0_2.s_comment)::text))
                                                   ->  Nested Loop  (cost=1.45..14.87 rows=1 width=296)
                                                         ->  Hash Join  (cost=1.02..6.54 rows=1 width=155)
                                                               Hash Cond: ((_temp_view_0."A0" = f0_5."A3") AND (_temp_view_0."A1" = f0_5."A4"))
                                                               ->  CTE Scan on _temp_view_0  (cost=0.00..4.00 rows=200 width=16)
                                                               ->  Hash  (cost=1.01..1.01 rows=1 width=139)
                                                                     ->  Seq Scan on rtpcq02 f0_5  (cost=0.00..1.01 rows=1 width=139)
                                                         ->  Index Scan using fkey_8 on partsupp f0_4  (cost=0.42..8.33 rows=1 width=157)
                                                               Index Cond: (ps_partkey = _temp_view_0."A0")
                                                               Filter: (_temp_view_0."A1" = ps_supplycost)
                                                   ->  Index Scan using supplier_pkey on supplier f0_2  (cost=0.29..0.30 rows=1 width=147)
                                                         Index Cond: (s_suppkey = f0_4.ps_suppkey)
                                             ->  Index Scan using nation_pkey on nation f0  (cost=0.14..0.16 rows=1 width=24)
                                                   Index Cond: (n_nationkey = f0_2.s_nationkey)
                                       ->  Seq Scan on region f0_1  (cost=0.00..1.06 rows=1 width=8)
                                             Filter: ((r_name)::text = 'EUROPE'::text)
                                 ->  Index Scan using part_pkey on part f0_3  (cost=0.42..0.47 rows=1 width=23)
                                       Index Cond: (p_partkey = f0_4.ps_partkey)
                                       Filter: (((p_type)::text ~~ '%BRASS'::text) AND (p_size = 15))
               ->  Unique  (cost=628.78..628.80 rows=1 width=157)
                     ->  Sort  (cost=628.78..628.79 rows=1 width=157)
                           Sort Key: f0_9.p_partkey, f0_8.s_suppkey, f0_10.ps_availqty, f0_10.ps_supplycost, f0_10.ps_comment
                           ->  Nested Loop  (cost=319.29..628.77 rows=1 width=157)
                                 Join Filter: ((_temp_view_0_1."A0" = f0_9.p_partkey) AND (_temp_view_0_1."A1" = f0_20.ps_supplycost) AND (f0_21."A0" = f0_18.s_acctbal) AND ((f0_21."A1")::text = (f0_18.s_name)::text) AND ((f0_21."A2")::text = (f0_16.n_name)::text) AND ((f0_21."A5")::text = (f0_19.p_mfgr)::text) AND ((f0_21."A6")::text = (f0_18.s_address)::text) AND ((f0_21."A7")::text = (f0_18.s_phone)::text) AND ((f0_21."A8")::text = (f0_18.s_comment)::text))
                                 ->  Hash Join  (cost=1.02..6.54 rows=1 width=155)
                                       Hash Cond: ((_temp_view_0_1."A0" = f0_21."A3") AND (_temp_view_0_1."A1" = f0_21."A4"))
                                       ->  CTE Scan on _temp_view_0 _temp_view_0_1  (cost=0.00..4.00 rows=200 width=16)
                                       ->  Hash  (cost=1.01..1.01 rows=1 width=139)
                                             ->  Seq Scan on rtpcq02 f0_21  (cost=0.00..1.01 rows=1 width=139)
                                 ->  Nested Loop  (cost=318.26..622.20 rows=1 width=359)
                                       Join Filter: (f0_9.p_partkey = f0_19.p_partkey)
                                       ->  Hash Join  (cost=317.84..621.72 rows=1 width=336)
                                             Hash Cond: (f0_16.n_regionkey = f0_17.r_regionkey)
                                             ->  Nested Loop  (cost=316.77..620.63 rows=4 width=344)
                                                   ->  Nested Loop  (cost=316.63..620.00 rows=4 width=336)
                                                         ->  Nested Loop  (cost=316.34..618.79 rows=4 width=205)
                                                               Join Filter: (f0_9.p_partkey = f0_20.ps_partkey)
                                                               ->  Nested Loop  (cost=315.92..618.14 rows=1 width=181)
                                                                     Join Filter: ((f0_9.p_partkey = f0_15.ps_partkey) AND (f0_13.s_suppkey = f0_15.ps_suppkey))
                                                                     ->  Nested Loop  (cost=315.49..617.51 rows=1 width=181)
                                                                           Join Filter: ((f0_9.p_partkey = f0_14.p_partkey) AND ((f0_9.p_mfgr)::text = (f0_14.p_mfgr)::text))
                                                                           ->  Nested Loop  (cost=315.07..617.03 rows=1 width=188)
                                                                                 ->  Nested Loop  (cost=314.65..616.57 rows=1 width=165)
                                                                                       ->  Hash Join  (cost=314.23..605.59 rows=1 width=16)
                                                                                             Hash Cond: (((f0_6.n_name)::text = (f0_11.n_name)::text) AND ((f0_8.s_name)::text = (f0_13.s_name)::text) AND ((f0_8.s_address)::text = (f0_13.s_address)::text) AND ((f0_8.s_phone)::text = (f0_13.s_phone)::text) AND (f0_8.s_acctbal = f0_13.s_acctbal) AND ((f0_8.s_comment)::text = (f0_13.s_comment)::text))
                                                                                             ->  Nested Loop  (cost=8.94..255.29 rows=2000 width=147)
                                                                                                   ->  Hash Join  (cost=1.07..2.45 rows=5 width=16)
                                                                                                         Hash Cond: (f0_6.n_regionkey = f0_7.r_regionkey)
                                                                                                         ->  Seq Scan on nation f0_6  (cost=0.00..1.25 rows=25 width=24)
                                                                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=8)
                                                                                                               ->  Seq Scan on region f0_7  (cost=0.00..1.06 rows=1 width=8)
                                                                                                                     Filter: ((r_name)::text = 'EUROPE'::text)
                                                                                                   ->  Bitmap Heap Scan on supplier f0_8  (cost=7.87..46.57 rows=400 width=147)
                                                                                                         Recheck Cond: (s_nationkey = f0_6.n_nationkey)
                                                                                                         ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                                                                               Index Cond: (s_nationkey = f0_6.n_nationkey)
                                                                                             ->  Hash  (cost=255.29..255.29 rows=2000 width=147)
                                                                                                   ->  Nested Loop  (cost=8.94..255.29 rows=2000 width=147)
                                                                                                         ->  Hash Join  (cost=1.07..2.45 rows=5 width=16)
                                                                                                               Hash Cond: (f0_11.n_regionkey = f0_12.r_regionkey)
                                                                                                               ->  Seq Scan on nation f0_11  (cost=0.00..1.25 rows=25 width=24)
                                                                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=8)
                                                                                                                     ->  Seq Scan on region f0_12  (cost=0.00..1.06 rows=1 width=8)
                                                                                                                           Filter: ((r_name)::text = 'EUROPE'::text)
                                                                                                         ->  Bitmap Heap Scan on supplier f0_13  (cost=7.87..46.57 rows=400 width=147)
                                                                                                               Recheck Cond: (s_nationkey = f0_11.n_nationkey)
                                                                                                               ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                                                                                     Index Cond: (s_nationkey = f0_11.n_nationkey)
                                                                                       ->  Index Scan using fkey_9 on partsupp f0_10  (cost=0.42..10.18 rows=80 width=157)
                                                                                             Index Cond: (ps_suppkey = f0_8.s_suppkey)
                                                                                 ->  Index Scan using part_pkey on part f0_9  (cost=0.42..0.47 rows=1 width=23)
                                                                                       Index Cond: (p_partkey = f0_10.ps_partkey)
                                                                                       Filter: (((p_type)::text ~~ '%BRASS'::text) AND (p_size = 15))
                                                                           ->  Index Scan using part_pkey on part f0_14  (cost=0.42..0.47 rows=1 width=23)
                                                                                 Index Cond: (p_partkey = f0_10.ps_partkey)
                                                                                 Filter: (((p_type)::text ~~ '%BRASS'::text) AND (p_size = 15))
                                                                     ->  Index Scan using fkey_8 on partsupp f0_15  (cost=0.42..0.61 rows=1 width=24)
                                                                           Index Cond: (ps_partkey = f0_10.ps_partkey)
                                                                           Filter: (f0_10.ps_supplycost = ps_supplycost)
                                                               ->  Index Scan using fkey_8 on partsupp f0_20  (cost=0.42..0.60 rows=4 width=24)
                                                                     Index Cond: (ps_partkey = f0_10.ps_partkey)
                                                         ->  Index Scan using supplier_pkey on supplier f0_18  (cost=0.29..0.30 rows=1 width=147)
                                                               Index Cond: (s_suppkey = f0_20.ps_suppkey)
                                                   ->  Index Scan using nation_pkey on nation f0_16  (cost=0.14..0.16 rows=1 width=24)
                                                         Index Cond: (n_nationkey = f0_18.s_nationkey)
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=8)
                                                   ->  Seq Scan on region f0_17  (cost=0.00..1.06 rows=1 width=8)
                                                         Filter: ((r_name)::text = 'EUROPE'::text)
                                       ->  Index Scan using part_pkey on part f0_19  (cost=0.42..0.47 rows=1 width=23)
                                             Index Cond: (p_partkey = f0_10.ps_partkey)
                                             Filter: (((p_type)::text ~~ '%BRASS'::text) AND (p_size = 15))
(135 rows)

Time: 110.342 ms