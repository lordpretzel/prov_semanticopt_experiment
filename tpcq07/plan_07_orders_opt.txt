Timing is on.
                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Unique  (cost=535075.32..535075.35 rows=1 width=112)
   ->  Sort  (cost=535075.32..535075.33 rows=1 width=112)
         Sort Key: f0_1.o_orderkey, f0_1.o_custkey, f0_1.o_orderstatus, f0_1.o_totalprice, f0_1.o_orderdate, f0_1.o_orderpriority, f0_1.o_clerk, f0_1.o_shippriority, f0_1.o_comment
         ->  Hash Join  (cost=459121.56..535075.31 rows=1 width=112)
               Hash Cond: (((f0_6.n_name)::text = (f0."A0")::text) AND ((f0_5.n_name)::text = (f0."A1")::text) AND ((date_part('year'::text, (f0_2.l_shipdate)::timestamp without time zone)) = f0."A2"))
               ->  Hash Join  (cost=459120.53..535074.19 rows=7 width=160)
                     Hash Cond: (((f0_6.n_name)::text = (f0_11.n_name)::text) AND ((f0_5.n_name)::text = (f0_12.n_name)::text) AND ((date_part('year'::text, (f0_2.l_shipdate)::timestamp without time zone)) = (date_part('year'::text, (f0_8.l_shipdate)::timestamp without time zone))) AND (((f0_2.l_extendedprice * ('1'::double precision - f0_2.l_discount))) = ((f0_8.l_extendedprice * ('1'::double precision - f0_8.l_discount)))))
                     ->  HashAggregate  (cost=382533.24..420041.22 rows=1875399 width=144)
                           Group Key: f0_1.o_orderkey, f0_1.o_custkey, f0_1.o_orderstatus, f0_1.o_totalprice, f0_1.o_orderdate, f0_1.o_orderpriority, f0_1.o_clerk, f0_1.o_shippriority, f0_1.o_comment, f0_6.n_name, f0_5.n_name, date_part('year'::text, (f0_2.l_shipdate)::timestamp without time zone), (f0_2.l_extendedprice * ('1'::double precision - f0_2.l_discount))
                           ->  Hash Join  (cost=69932.12..321582.78 rows=1875399 width=144)
                                 Hash Cond: (f0_4.s_nationkey = f0_6.n_nationkey)
                                 ->  Hash Join  (cost=69930.56..297069.75 rows=1875399 width=148)
                                       Hash Cond: (f0_3.c_nationkey = f0_5.n_nationkey)
                                       ->  Hash Join  (cost=69929.00..291310.71 rows=1875399 width=148)
                                             Hash Cond: (f0_2.l_suppkey = f0_4.s_suppkey)
                                             ->  Hash Join  (cost=69477.00..285933.70 rows=1875399 width=148)
                                                   Hash Cond: (f0_1.o_custkey = f0_3.c_custkey)
                                                   ->  Hash Join  (cost=62329.00..273862.63 rows=1875399 width=140)
                                                         Hash Cond: (f0_2.l_orderkey = f0_1.o_orderkey)
                                                         ->  Seq Scan on lineitem f0_2  (cost=0.00..206610.70 rows=1875399 width=36)
                                                               Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                                         ->  Hash  (cost=43579.00..43579.00 rows=1500000 width=112)
                                                               ->  Seq Scan on orders f0_1  (cost=0.00..43579.00 rows=1500000 width=112)
                                                   ->  Hash  (cost=5273.00..5273.00 rows=150000 width=16)
                                                         ->  Seq Scan on customer f0_3  (cost=0.00..5273.00 rows=150000 width=16)
                                             ->  Hash  (cost=327.00..327.00 rows=10000 width=16)
                                                   ->  Seq Scan on supplier f0_4  (cost=0.00..327.00 rows=10000 width=16)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=16)
                                             ->  Seq Scan on nation f0_5  (cost=0.00..1.25 rows=25 width=16)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=16)
                                       ->  Seq Scan on nation f0_6  (cost=0.00..1.25 rows=25 width=16)
                     ->  Hash  (cost=76467.27..76467.27 rows=6001 width=32)
                           ->  Unique  (cost=76332.25..76407.26 rows=6001 width=32)
                                 ->  Sort  (cost=76332.25..76347.25 rows=6001 width=32)
                                       Sort Key: f0_11.n_name, f0_12.n_name, (date_part('year'::text, (f0_8.l_shipdate)::timestamp without time zone)), ((f0_8.l_extendedprice * ('1'::double precision - f0_8.l_discount)))
                                       ->  Gather  (cost=1455.99..75955.66 rows=6001 width=32)
                                             Workers Planned: 2
                                             ->  Hash Join  (cost=455.99..74355.56 rows=2500 width=32)
                                                   Hash Cond: ((f0_7.s_nationkey = f0_11.n_nationkey) AND (('FRANCE'::text) = (f0_11.n_name)::text))
                                                   ->  Hash Join  (cost=454.37..73999.51 rows=62513 width=68)
                                                         Hash Cond: (f0_8.l_suppkey = f0_7.s_suppkey)
                                                         ->  Nested Loop  (cost=2.37..73383.35 rows=62513 width=68)
                                                               ->  Nested Loop  (cost=1.94..13518.22 rows=50000 width=48)
                                                                     ->  Hash Join  (cost=1.51..4683.88 rows=5000 width=48)
                                                                           Hash Cond: (f0_10.c_nationkey = f0_12.n_nationkey)
                                                                           ->  Parallel Seq Scan on customer f0_10  (cost=0.00..4398.00 rows=62500 width=16)
                                                                           ->  Hash  (cost=1.48..1.48 rows=2 width=48)
                                                                                 ->  Hash Join  (cost=0.12..1.48 rows=2 width=48)
                                                                                       Hash Cond: ((f0_12.n_name)::text = ('GERMANY'::text))
                                                                                       ->  Seq Scan on nation f0_12  (cost=0.00..1.25 rows=25 width=16)
                                                                                       ->  Hash  (cost=0.10..0.10 rows=2 width=64)
                                                                                             ->  Unique  (cost=0.06..0.08 rows=2 width=64)
                                                                                                   ->  Sort  (cost=0.06..0.07 rows=2 width=64)
                                                                                                         Sort Key: ('FRANCE'::text), ('GERMANY'::text)
                                                                                                         ->  Append  (cost=0.00..0.05 rows=2 width=64)
                                                                                                               ->  Result  (cost=0.00..0.01 rows=1 width=64)
                                                                                                               ->  Result  (cost=0.00..0.01 rows=1 width=64)
                                                                     ->  Index Scan using fkey_7 on orders f0_9  (cost=0.43..1.60 rows=17 width=16)
                                                                           Index Cond: (o_custkey = f0_10.c_custkey)
                                                               ->  Index Scan using fkey_2 on lineitem f0_8  (cost=0.43..1.15 rows=5 width=36)
                                                                     Index Cond: (l_orderkey = f0_9.o_orderkey)
                                                                     Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                                         ->  Hash  (cost=327.00..327.00 rows=10000 width=16)
                                                               ->  Seq Scan on supplier f0_7  (cost=0.00..327.00 rows=10000 width=16)
                                                   ->  Hash  (cost=1.25..1.25 rows=25 width=16)
                                                         ->  Seq Scan on nation f0_11  (cost=0.00..1.25 rows=25 width=16)
               ->  Hash  (cost=1.01..1.01 rows=1 width=23)
                     ->  Seq Scan on rtpcq07 f0  (cost=0.00..1.01 rows=1 width=23)
(68 rows)

Time: 45.503 ms