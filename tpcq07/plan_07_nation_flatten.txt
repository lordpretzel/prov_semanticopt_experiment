Timing is on.
                                                                                                                                   QUERY PLAN                                                                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Unique  (cost=348213.63..348213.66 rows=2 width=406)
   CTE _temp_view_1
     ->  Unique  (cost=0.06..0.08 rows=2 width=64)
           ->  Sort  (cost=0.06..0.07 rows=2 width=64)
                 Sort Key: ('FRANCE'::text), ('GERMANY'::text)
                 ->  Append  (cost=0.00..0.05 rows=2 width=64)
                       ->  Result  (cost=0.00..0.01 rows=1 width=64)
                       ->  Result  (cost=0.00..0.01 rows=1 width=64)
   CTE _temp_view_0
     ->  Unique  (cost=232035.78..232305.82 rows=1200 width=131)
           ->  Sort  (cost=232035.78..232065.78 rows=12002 width=131)
                 Sort Key: f0_2.s_nationkey, f0_6.n_name, f0_6.n_regionkey, f0_6.n_comment, f0_6.n_name, f0_7.n_name, (date_part('year'::text, (f0_3.l_shipdate)::timestamp without time zone)), ((f0_3.l_extendedprice * ('1'::double precision - f0_3.l_discount)))
                 ->  Append  (cost=115401.26..231222.58 rows=12002 width=131)
                       ->  Unique  (cost=115401.26..115521.28 rows=6001 width=131)
                             ->  Sort  (cost=115401.26..115416.26 rows=6001 width=131)
                                   Sort Key: f0_2.s_nationkey, f0_6.n_name, f0_6.n_regionkey, f0_6.n_comment, f0_7.n_name, (date_part('year'::text, (f0_3.l_shipdate)::timestamp without time zone)), ((f0_3.l_extendedprice * ('1'::double precision - f0_3.l_discount)))
                                   ->  Hash Join  (cost=63472.66..115024.66 rows=6001 width=131)
                                         Hash Cond: ((f0_4.o_custkey = f0_5.c_custkey) AND (f0_7.n_nationkey = f0_5.c_nationkey))
                                         ->  Hash Join  (cost=55949.66..106653.98 rows=150032 width=143)
                                               Hash Cond: (f0_4.o_orderkey = f0_3.l_orderkey)
                                               ->  Seq Scan on orders f0_4  (cost=0.00..43579.00 rows=1500000 width=16)
                                               ->  Hash  (cost=54074.26..54074.26 rows=150032 width=143)
                                                     ->  Nested Loop  (cost=8.50..54074.26 rows=150032 width=143)
                                                           ->  Nested Loop  (cost=8.07..115.83 rows=800 width=123)
                                                                 ->  Nested Loop  (cost=0.20..14.70 rows=2 width=115)
                                                                       Join Filter: (_temp_view_1.c1 = (f0_7.n_name)::text)
                                                                       ->  Index Scan using nation_pkey on nation f0_7  (cost=0.14..12.51 rows=25 width=16)
                                                                       ->  Materialize  (cost=0.07..1.44 rows=2 width=131)
                                                                             ->  Hash Join  (cost=0.07..1.43 rows=2 width=131)
                                                                                   Hash Cond: ((f0_6.n_name)::text = _temp_view_1.c0)
                                                                                   ->  Seq Scan on nation f0_6  (cost=0.00..1.25 rows=25 width=99)
                                                                                   ->  Hash  (cost=0.04..0.04 rows=2 width=64)
                                                                                         ->  CTE Scan on _temp_view_1  (cost=0.00..0.04 rows=2 width=64)
                                                                 ->  Bitmap Heap Scan on supplier f0_2  (cost=7.87..46.57 rows=400 width=16)
                                                                       Recheck Cond: (s_nationkey = f0_6.n_nationkey)
                                                                       ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                                             Index Cond: (s_nationkey = f0_6.n_nationkey)
                                                           ->  Index Scan using fkey_5 on lineitem f0_3  (cost=0.43..65.57 rows=188 width=36)
                                                                 Index Cond: (l_suppkey = f0_2.s_suppkey)
                                                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                         ->  Hash  (cost=5273.00..5273.00 rows=150000 width=16)
                                               ->  Seq Scan on customer f0_5  (cost=0.00..5273.00 rows=150000 width=16)
                       ->  Unique  (cost=115401.26..115521.28 rows=6001 width=131)
                             ->  Sort  (cost=115401.26..115416.26 rows=6001 width=131)
                                   Sort Key: f0_11.c_nationkey, f0_13.n_name, f0_13.n_regionkey, f0_13.n_comment, f0_12.n_name, (date_part('year'::text, (f0_9.l_shipdate)::timestamp without time zone)), ((f0_9.l_extendedprice * ('1'::double precision - f0_9.l_discount)))
                                   ->  Hash Join  (cost=63472.66..115024.66 rows=6001 width=131)
                                         Hash Cond: ((f0_10.o_custkey = f0_11.c_custkey) AND (f0_13.n_nationkey = f0_11.c_nationkey))
                                         ->  Hash Join  (cost=55949.66..106653.98 rows=150032 width=135)
                                               Hash Cond: (f0_10.o_orderkey = f0_9.l_orderkey)
                                               ->  Seq Scan on orders f0_10  (cost=0.00..43579.00 rows=1500000 width=16)
                                               ->  Hash  (cost=54074.26..54074.26 rows=150032 width=135)
                                                     ->  Nested Loop  (cost=8.50..54074.26 rows=150032 width=135)
                                                           ->  Nested Loop  (cost=8.07..115.83 rows=800 width=115)
                                                                 ->  Nested Loop  (cost=0.20..14.70 rows=2 width=115)
                                                                       Join Filter: (_temp_view_1_1.c1 = (f0_13.n_name)::text)
                                                                       ->  Index Scan using nation_pkey on nation f0_13  (cost=0.14..12.51 rows=25 width=99)
                                                                       ->  Materialize  (cost=0.07..1.44 rows=2 width=48)
                                                                             ->  Hash Join  (cost=0.07..1.43 rows=2 width=48)
                                                                                   Hash Cond: ((f0_12.n_name)::text = _temp_view_1_1.c0)
                                                                                   ->  Seq Scan on nation f0_12  (cost=0.00..1.25 rows=25 width=16)
                                                                                   ->  Hash  (cost=0.04..0.04 rows=2 width=64)
                                                                                         ->  CTE Scan on _temp_view_1 _temp_view_1_1  (cost=0.00..0.04 rows=2 width=64)
                                                                 ->  Bitmap Heap Scan on supplier f0_8  (cost=7.87..46.57 rows=400 width=16)
                                                                       Recheck Cond: (s_nationkey = f0_12.n_nationkey)
                                                                       ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                                             Index Cond: (s_nationkey = f0_12.n_nationkey)
                                                           ->  Index Scan using fkey_5 on lineitem f0_9  (cost=0.43..65.57 rows=188 width=36)
                                                                 Index Cond: (l_suppkey = f0_8.s_suppkey)
                                                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                         ->  Hash  (cost=5273.00..5273.00 rows=150000 width=16)
                                               ->  Seq Scan on customer f0_11  (cost=0.00..5273.00 rows=150000 width=16)
   CTE _temp_view_3
     ->  Unique  (cost=115401.26..115476.27 rows=6001 width=32)
           ->  Sort  (cost=115401.26..115416.26 rows=6001 width=32)
                 Sort Key: f0_18.n_name, f0_19.n_name, (date_part('year'::text, (f0_15.l_shipdate)::timestamp without time zone)), ((f0_15.l_extendedprice * ('1'::double precision - f0_15.l_discount)))
                 ->  Hash Join  (cost=63472.66..115024.66 rows=6001 width=32)
                       Hash Cond: ((f0_16.o_custkey = f0_17.c_custkey) AND (f0_19.n_nationkey = f0_17.c_nationkey))
                       ->  Hash Join  (cost=55949.66..106653.98 rows=150032 width=52)
                             Hash Cond: (f0_16.o_orderkey = f0_15.l_orderkey)
                             ->  Seq Scan on orders f0_16  (cost=0.00..43579.00 rows=1500000 width=16)
                             ->  Hash  (cost=54074.26..54074.26 rows=150032 width=52)
                                   ->  Nested Loop  (cost=8.50..54074.26 rows=150032 width=52)
                                         ->  Nested Loop  (cost=8.07..115.83 rows=800 width=32)
                                               ->  Nested Loop  (cost=0.20..14.70 rows=2 width=32)
                                                     Join Filter: (_temp_view_1_2.c1 = (f0_19.n_name)::text)
                                                     ->  Index Scan using nation_pkey on nation f0_19  (cost=0.14..12.51 rows=25 width=16)
                                                     ->  Materialize  (cost=0.07..1.44 rows=2 width=48)
                                                           ->  Hash Join  (cost=0.07..1.43 rows=2 width=48)
                                                                 Hash Cond: ((f0_18.n_name)::text = _temp_view_1_2.c0)
                                                                 ->  Seq Scan on nation f0_18  (cost=0.00..1.25 rows=25 width=16)
                                                                 ->  Hash  (cost=0.04..0.04 rows=2 width=64)
                                                                       ->  CTE Scan on _temp_view_1 _temp_view_1_2  (cost=0.00..0.04 rows=2 width=64)
                                               ->  Bitmap Heap Scan on supplier f0_14  (cost=7.87..46.57 rows=400 width=16)
                                                     Recheck Cond: (s_nationkey = f0_18.n_nationkey)
                                                     ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                           Index Cond: (s_nationkey = f0_18.n_nationkey)
                                         ->  Index Scan using fkey_5 on lineitem f0_15  (cost=0.43..65.57 rows=188 width=36)
                                               Index Cond: (l_suppkey = f0_14.s_suppkey)
                                               Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                       ->  Hash  (cost=5273.00..5273.00 rows=150000 width=16)
                             ->  Seq Scan on customer f0_17  (cost=0.00..5273.00 rows=150000 width=16)
   ->  Sort  (cost=431.47..431.47 rows=2 width=406)
         Sort Key: _temp_view_0."A0", _temp_view_0."A1", _temp_view_0."A2", _temp_view_0."A3"
         ->  Append  (cost=215.70..431.46 rows=2 width=406)
               ->  Unique  (cost=215.70..215.71 rows=1 width=406)
                     ->  Sort  (cost=215.70..215.70 rows=1 width=406)
                           Sort Key: _temp_view_0."A0", _temp_view_0."A1", _temp_view_0."A2", _temp_view_0."A3"
                           ->  Nested Loop  (cost=1.03..215.69 rows=1 width=406)
                                 Join Filter: (((_temp_view_3."A0")::text = (_temp_view_0."A1")::text) AND ((_temp_view_3."A1")::text = (_temp_view_0."A5")::text) AND (_temp_view_3."A2" = _temp_view_0."A6") AND (_temp_view_3."A3" = _temp_view_0."A7"))
                                 ->  Hash Join  (cost=1.03..188.57 rows=1 width=175)
                                       Hash Cond: (((_temp_view_3."A0")::text = (f0."A0")::text) AND ((_temp_view_3."A1")::text = (f0."A1")::text) AND (_temp_view_3."A2" = f0."A2"))
                                       ->  CTE Scan on _temp_view_3  (cost=0.00..120.02 rows=6001 width=152)
                                       ->  Hash  (cost=1.01..1.01 rows=1 width=23)
                                             ->  Seq Scan on rtpcq07 f0  (cost=0.00..1.01 rows=1 width=23)
                                 ->  CTE Scan on _temp_view_0  (cost=0.00..27.00 rows=6 width=558)
                                       Filter: (("A1")::text = ("A4")::text)
               ->  Unique  (cost=215.70..215.71 rows=1 width=406)
                     ->  Sort  (cost=215.70..215.70 rows=1 width=406)
                           Sort Key: _temp_view_0_1."A0", _temp_view_0_1."A1", _temp_view_0_1."A2", _temp_view_0_1."A3"
                           ->  Nested Loop  (cost=1.03..215.69 rows=1 width=406)
                                 Join Filter: (((_temp_view_3_1."A1")::text = (_temp_view_0_1."A1")::text) AND ((_temp_view_3_1."A0")::text = (_temp_view_0_1."A4")::text) AND (_temp_view_3_1."A2" = _temp_view_0_1."A6") AND (_temp_view_3_1."A3" = _temp_view_0_1."A7"))
                                 ->  Hash Join  (cost=1.03..188.57 rows=1 width=175)
                                       Hash Cond: (((_temp_view_3_1."A1")::text = (f0_1."A1")::text) AND ((_temp_view_3_1."A0")::text = (f0_1."A0")::text) AND (_temp_view_3_1."A2" = f0_1."A2"))
                                       ->  CTE Scan on _temp_view_3 _temp_view_3_1  (cost=0.00..120.02 rows=6001 width=152)
                                       ->  Hash  (cost=1.01..1.01 rows=1 width=23)
                                             ->  Seq Scan on rtpcq07 f0_1  (cost=0.00..1.01 rows=1 width=23)
                                 ->  CTE Scan on _temp_view_0 _temp_view_0_1  (cost=0.00..27.00 rows=6 width=558)
                                       Filter: (("A1")::text = ("A5")::text)
(128 rows)

Time: 18.589 ms