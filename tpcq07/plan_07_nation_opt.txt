Timing is on.
                                                                                                                                    QUERY PLAN                                                                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Unique  (cost=971847.12..971847.15 rows=2 width=406)
   CTE _temp_view_0
     ->  HashAggregate  (cost=874262.65..878013.45 rows=375080 width=131)
           Group Key: f0_2.n_nationkey, f0_2.n_name, f0_2.n_regionkey, f0_2.n_comment, f0_2.n_name, f0_7.n_name, (date_part('year'::text, (f0_4.l_shipdate)::timestamp without time zone)), ((f0_4.l_extendedprice * ('1'::double precision - f0_4.l_discount)))
           ->  Gather  (cost=360090.76..799246.69 rows=3750798 width=131)
                 Workers Planned: 2
                 ->  Parallel Append  (cost=359090.76..423166.89 rows=1562832 width=131)
                       ->  HashAggregate  (cost=359090.76..396598.74 rows=1875399 width=131)
                             Group Key: f0_2.n_nationkey, f0_2.n_name, f0_2.n_regionkey, f0_2.n_comment, f0_2.n_name, f0_7.n_name, date_part('year'::text, (f0_4.l_shipdate)::timestamp without time zone), (f0_4.l_extendedprice * ('1'::double precision - f0_4.l_discount))
                             ->  Hash Join  (cost=69932.12..321582.78 rows=1875399 width=131)
                                   Hash Cond: (f0_6.c_nationkey = f0_7.n_nationkey)
                                   ->  Hash Join  (cost=69930.56..297069.75 rows=1875399 width=127)
                                         Hash Cond: (f0_5.o_custkey = f0_6.c_custkey)
                                         ->  Hash Join  (cost=62782.56..284998.68 rows=1875399 width=127)
                                               Hash Cond: (f0_4.l_orderkey = f0_5.o_orderkey)
                                               ->  Hash Join  (cost=453.56..217746.75 rows=1875399 width=127)
                                                     Hash Cond: (f0_3.s_nationkey = f0_2.n_nationkey)
                                                     ->  Hash Join  (cost=452.00..211987.71 rows=1875399 width=36)
                                                           Hash Cond: (f0_4.l_suppkey = f0_3.s_suppkey)
                                                           ->  Seq Scan on lineitem f0_4  (cost=0.00..206610.70 rows=1875399 width=36)
                                                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                                           ->  Hash  (cost=327.00..327.00 rows=10000 width=16)
                                                                 ->  Seq Scan on supplier f0_3  (cost=0.00..327.00 rows=10000 width=16)
                                                     ->  Hash  (cost=1.25..1.25 rows=25 width=99)
                                                           ->  Seq Scan on nation f0_2  (cost=0.00..1.25 rows=25 width=99)
                                               ->  Hash  (cost=43579.00..43579.00 rows=1500000 width=16)
                                                     ->  Seq Scan on orders f0_5  (cost=0.00..43579.00 rows=1500000 width=16)
                                         ->  Hash  (cost=5273.00..5273.00 rows=150000 width=16)
                                               ->  Seq Scan on customer f0_6  (cost=0.00..5273.00 rows=150000 width=16)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=16)
                                         ->  Seq Scan on nation f0_7  (cost=0.00..1.25 rows=25 width=16)
                       ->  HashAggregate  (cost=359090.76..396598.74 rows=1875399 width=131)
                             Group Key: f0_8.n_nationkey, f0_8.n_name, f0_8.n_regionkey, f0_8.n_comment, f0_13.n_name, f0_8.n_name, date_part('year'::text, (f0_11.l_shipdate)::timestamp without time zone), (f0_11.l_extendedprice * ('1'::double precision - f0_11.l_discount))
                             ->  Hash Join  (cost=69932.12..321582.78 rows=1875399 width=131)
                                   Hash Cond: (f0_12.s_nationkey = f0_13.n_nationkey)
                                   ->  Hash Join  (cost=69930.56..297069.75 rows=1875399 width=127)
                                         Hash Cond: (f0_11.l_suppkey = f0_12.s_suppkey)
                                         ->  Hash Join  (cost=69478.56..291692.73 rows=1875399 width=127)
                                               Hash Cond: (f0_9.c_nationkey = f0_8.n_nationkey)
                                               ->  Hash Join  (cost=69477.00..285933.70 rows=1875399 width=36)
                                                     Hash Cond: (f0_10.o_custkey = f0_9.c_custkey)
                                                     ->  Hash Join  (cost=62329.00..273862.63 rows=1875399 width=36)
                                                           Hash Cond: (f0_11.l_orderkey = f0_10.o_orderkey)
                                                           ->  Seq Scan on lineitem f0_11  (cost=0.00..206610.70 rows=1875399 width=36)
                                                                 Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                                           ->  Hash  (cost=43579.00..43579.00 rows=1500000 width=16)
                                                                 ->  Seq Scan on orders f0_10  (cost=0.00..43579.00 rows=1500000 width=16)
                                                     ->  Hash  (cost=5273.00..5273.00 rows=150000 width=16)
                                                           ->  Seq Scan on customer f0_9  (cost=0.00..5273.00 rows=150000 width=16)
                                               ->  Hash  (cost=1.25..1.25 rows=25 width=99)
                                                     ->  Seq Scan on nation f0_8  (cost=0.00..1.25 rows=25 width=99)
                                         ->  Hash  (cost=327.00..327.00 rows=10000 width=16)
                                               ->  Seq Scan on supplier f0_12  (cost=0.00..327.00 rows=10000 width=16)
                                   ->  Hash  (cost=1.25..1.25 rows=25 width=16)
                                         ->  Seq Scan on nation f0_13  (cost=0.00..1.25 rows=25 width=16)
   CTE _temp_view_1
     ->  Unique  (cost=76332.25..76407.26 rows=6001 width=32)
           ->  Sort  (cost=76332.25..76347.25 rows=6001 width=32)
                 Sort Key: f0_18.n_name, f0_19.n_name, (date_part('year'::text, (f0_15.l_shipdate)::timestamp without time zone)), ((f0_15.l_extendedprice * ('1'::double precision - f0_15.l_discount)))
                 ->  Gather  (cost=1455.99..75955.66 rows=6001 width=32)
                       Workers Planned: 2
                       ->  Hash Join  (cost=455.99..74355.56 rows=2500 width=32)
                             Hash Cond: ((f0_14.s_nationkey = f0_18.n_nationkey) AND (('FRANCE'::text) = (f0_18.n_name)::text))
                             ->  Hash Join  (cost=454.37..73999.51 rows=62513 width=68)
                                   Hash Cond: (f0_15.l_suppkey = f0_14.s_suppkey)
                                   ->  Nested Loop  (cost=2.37..73383.35 rows=62513 width=68)
                                         ->  Nested Loop  (cost=1.94..13518.22 rows=50000 width=48)
                                               ->  Hash Join  (cost=1.51..4683.88 rows=5000 width=48)
                                                     Hash Cond: (f0_17.c_nationkey = f0_19.n_nationkey)
                                                     ->  Parallel Seq Scan on customer f0_17  (cost=0.00..4398.00 rows=62500 width=16)
                                                     ->  Hash  (cost=1.48..1.48 rows=2 width=48)
                                                           ->  Hash Join  (cost=0.12..1.48 rows=2 width=48)
                                                                 Hash Cond: ((f0_19.n_name)::text = ('GERMANY'::text))
                                                                 ->  Seq Scan on nation f0_19  (cost=0.00..1.25 rows=25 width=16)
                                                                 ->  Hash  (cost=0.10..0.10 rows=2 width=64)
                                                                       ->  Unique  (cost=0.06..0.08 rows=2 width=64)
                                                                             ->  Sort  (cost=0.06..0.07 rows=2 width=64)
                                                                                   Sort Key: ('FRANCE'::text), ('GERMANY'::text)
                                                                                   ->  Append  (cost=0.00..0.05 rows=2 width=64)
                                                                                         ->  Result  (cost=0.00..0.01 rows=1 width=64)
                                                                                         ->  Result  (cost=0.00..0.01 rows=1 width=64)
                                               ->  Index Scan using fkey_7 on orders f0_16  (cost=0.43..1.60 rows=17 width=16)
                                                     Index Cond: (o_custkey = f0_17.c_custkey)
                                         ->  Index Scan using fkey_2 on lineitem f0_15  (cost=0.43..1.15 rows=5 width=36)
                                               Index Cond: (l_orderkey = f0_16.o_orderkey)
                                               Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                   ->  Hash  (cost=327.00..327.00 rows=10000 width=16)
                                         ->  Seq Scan on supplier f0_14  (cost=0.00..327.00 rows=10000 width=16)
                             ->  Hash  (cost=1.25..1.25 rows=25 width=16)
                                   ->  Seq Scan on nation f0_18  (cost=0.00..1.25 rows=25 width=16)
   ->  Sort  (cost=17426.41..17426.42 rows=2 width=406)
         Sort Key: _temp_view_0."A0", _temp_view_0."A1", _temp_view_0."A2", _temp_view_0."A3"
         ->  Append  (cost=8713.17..17426.40 rows=2 width=406)
               ->  Unique  (cost=8713.17..8713.19 rows=1 width=406)
                     ->  Sort  (cost=8713.17..8713.18 rows=1 width=406)
                           Sort Key: _temp_view_0."A0", _temp_view_0."A1", _temp_view_0."A2", _temp_view_0."A3"
                           ->  Nested Loop  (cost=0.00..8713.16 rows=1 width=406)
                                 Join Filter: (((_temp_view_0."A1")::text = (_temp_view_1."A0")::text) AND ((_temp_view_0."A5")::text = (_temp_view_1."A1")::text) AND (_temp_view_0."A6" = _temp_view_1."A2") AND (_temp_view_0."A7" = _temp_view_1."A3"))
                                 ->  Nested Loop  (cost=0.00..8473.12 rows=1 width=581)
                                       Join Filter: (((_temp_view_0."A1")::text = (f0."A0")::text) AND ((_temp_view_0."A5")::text = (f0."A1")::text) AND (_temp_view_0."A6" = f0."A2"))
                                       ->  Seq Scan on rtpcq07 f0  (cost=0.00..1.01 rows=1 width=23)
                                       ->  CTE Scan on _temp_view_0  (cost=0.00..8439.30 rows=1875 width=558)
                                             Filter: (("A1")::text = ("A4")::text)
                                 ->  CTE Scan on _temp_view_1  (cost=0.00..120.02 rows=6001 width=152)
               ->  Unique  (cost=8713.17..8713.19 rows=1 width=406)
                     ->  Sort  (cost=8713.17..8713.18 rows=1 width=406)
                           Sort Key: _temp_view_0_1."A0", _temp_view_0_1."A1", _temp_view_0_1."A2", _temp_view_0_1."A3"
                           ->  Nested Loop  (cost=0.00..8713.16 rows=1 width=406)
                                 Join Filter: (((_temp_view_0_1."A1")::text = (_temp_view_1_1."A1")::text) AND ((_temp_view_0_1."A4")::text = (_temp_view_1_1."A0")::text) AND (_temp_view_0_1."A6" = _temp_view_1_1."A2") AND (_temp_view_0_1."A7" = _temp_view_1_1."A3"))
                                 ->  Nested Loop  (cost=0.00..8473.12 rows=1 width=581)
                                       Join Filter: (((_temp_view_0_1."A1")::text = (f0_1."A1")::text) AND ((_temp_view_0_1."A4")::text = (f0_1."A0")::text) AND (_temp_view_0_1."A6" = f0_1."A2"))
                                       ->  Seq Scan on rtpcq07 f0_1  (cost=0.00..1.01 rows=1 width=23)
                                       ->  CTE Scan on _temp_view_0 _temp_view_0_1  (cost=0.00..8439.30 rows=1875 width=558)
                                             Filter: (("A1")::text = ("A5")::text)
                                 ->  CTE Scan on _temp_view_1 _temp_view_1_1  (cost=0.00..120.02 rows=6001 width=152)
(115 rows)

Time: 89.025 ms