Timing is on.
                                                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Unique  (cost=230803.63..231493.85 rows=1 width=125)
   CTE _temp_view_0
     ->  Unique  (cost=0.06..0.08 rows=2 width=64)
           ->  Sort  (cost=0.06..0.07 rows=2 width=64)
                 Sort Key: ('FRANCE'::text), ('GERMANY'::text)
                 ->  Append  (cost=0.00..0.05 rows=2 width=64)
                       ->  Result  (cost=0.00..0.01 rows=1 width=64)
                       ->  Result  (cost=0.00..0.01 rows=1 width=64)
   CTE _temp_view_2
     ->  Seq Scan on rtpcq07 f0_12  (cost=0.00..1.01 rows=1 width=31)
   ->  Nested Loop  (cost=230802.54..231492.72 rows=1 width=125)
         Join Filter: (((f0_4.n_name)::text = (f0_10.n_name)::text) AND ((f0_5.n_name)::text = (f0_11.n_name)::text) AND ((date_part('year'::text, (f0_1.l_shipdate)::timestamp without time zone)) = (date_part('year'::text, (f0_7.l_shipdate)::timestamp without time zone))) AND (((f0_1.l_extendedprice * ('1'::double precision - f0_1.l_discount))) = ((f0_7.l_extendedprice * ('1'::double precision - f0_7.l_discount)))))
         ->  Unique  (cost=115401.26..115716.31 rows=6001 width=157)
               ->  Sort  (cost=115401.26..115416.26 rows=6001 width=157)
                     Sort Key: f0_1.l_orderkey, f0_1.l_partkey, f0.s_suppkey, f0_1.l_linenumber, f0_1.l_quantity, f0_1.l_extendedprice, f0_1.l_discount, f0_1.l_tax, f0_1.l_returnflag, f0_1.l_linestatus, f0_1.l_shipdate, f0_1.l_commitdate, f0_1.l_receiptdate, f0_1.l_shipinstruct, f0_1.l_shipmode, f0_1.l_comment, f0_4.n_name, f0_5.n_name, (date_part('year'::text, (f0_1.l_shipdate)::timestamp without time zone)), ((f0_1.l_extendedprice * ('1'::double precision - f0_1.l_discount)))
                     ->  Hash Join  (cost=63472.66..115024.66 rows=6001 width=157)
                           Hash Cond: ((f0_2.o_custkey = f0_3.c_custkey) AND (f0_5.n_nationkey = f0_3.c_nationkey))
                           ->  Hash Join  (cost=55949.66..106653.98 rows=150032 width=157)
                                 Hash Cond: (f0_2.o_orderkey = f0_1.l_orderkey)
                                 ->  Seq Scan on orders f0_2  (cost=0.00..43579.00 rows=1500000 width=16)
                                 ->  Hash  (cost=54074.26..54074.26 rows=150032 width=149)
                                       ->  Nested Loop  (cost=8.50..54074.26 rows=150032 width=149)
                                             ->  Nested Loop  (cost=8.07..115.83 rows=800 width=32)
                                                   ->  Nested Loop  (cost=0.20..14.70 rows=2 width=32)
                                                         Join Filter: (_temp_view_0.c1 = (f0_5.n_name)::text)
                                                         ->  Index Scan using nation_pkey on nation f0_5  (cost=0.14..12.51 rows=25 width=16)
                                                         ->  Materialize  (cost=0.07..1.44 rows=2 width=48)
                                                               ->  Hash Join  (cost=0.07..1.43 rows=2 width=48)
                                                                     Hash Cond: ((f0_4.n_name)::text = _temp_view_0.c0)
                                                                     ->  Seq Scan on nation f0_4  (cost=0.00..1.25 rows=25 width=16)
                                                                     ->  Hash  (cost=0.04..0.04 rows=2 width=64)
                                                                           ->  CTE Scan on _temp_view_0  (cost=0.00..0.04 rows=2 width=64)
                                                   ->  Bitmap Heap Scan on supplier f0  (cost=7.87..46.57 rows=400 width=16)
                                                         Recheck Cond: (s_nationkey = f0_4.n_nationkey)
                                                         ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                               Index Cond: (s_nationkey = f0_4.n_nationkey)
                                             ->  Index Scan using fkey_5 on lineitem f0_1  (cost=0.43..65.57 rows=188 width=125)
                                                   Index Cond: (l_suppkey = f0.s_suppkey)
                                                   Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                           ->  Hash  (cost=5273.00..5273.00 rows=150000 width=16)
                                 ->  Seq Scan on customer f0_3  (cost=0.00..5273.00 rows=150000 width=16)
         ->  Materialize  (cost=115401.29..115581.39 rows=1 width=32)
               ->  Unique  (cost=115401.29..115581.37 rows=1 width=32)
                     ->  Merge Join  (cost=115401.29..115581.36 rows=1 width=32)
                           Merge Cond: (((f0_10.n_name)::text = (_temp_view_2.x1)::text) AND ((f0_11.n_name)::text = (_temp_view_2.x2)::text) AND ((date_part('year'::text, (f0_7.l_shipdate)::timestamp without time zone)) = _temp_view_2.x3))
                           ->  Unique  (cost=115401.26..115476.27 rows=6001 width=32)
                                 ->  Sort  (cost=115401.26..115416.26 rows=6001 width=32)
                                       Sort Key: f0_10.n_name, f0_11.n_name, (date_part('year'::text, (f0_7.l_shipdate)::timestamp without time zone)), ((f0_7.l_extendedprice * ('1'::double precision - f0_7.l_discount)))
                                       ->  Hash Join  (cost=63472.66..115024.66 rows=6001 width=32)
                                             Hash Cond: ((f0_8.o_custkey = f0_9.c_custkey) AND (f0_11.n_nationkey = f0_9.c_nationkey))
                                             ->  Hash Join  (cost=55949.66..106653.98 rows=150032 width=52)
                                                   Hash Cond: (f0_8.o_orderkey = f0_7.l_orderkey)
                                                   ->  Seq Scan on orders f0_8  (cost=0.00..43579.00 rows=1500000 width=16)
                                                   ->  Hash  (cost=54074.26..54074.26 rows=150032 width=52)
                                                         ->  Nested Loop  (cost=8.50..54074.26 rows=150032 width=52)
                                                               ->  Nested Loop  (cost=8.07..115.83 rows=800 width=32)
                                                                     ->  Nested Loop  (cost=0.20..14.70 rows=2 width=32)
                                                                           Join Filter: (_temp_view_0_1.c1 = (f0_11.n_name)::text)
                                                                           ->  Index Scan using nation_pkey on nation f0_11  (cost=0.14..12.51 rows=25 width=16)
                                                                           ->  Materialize  (cost=0.07..1.44 rows=2 width=48)
                                                                                 ->  Hash Join  (cost=0.07..1.43 rows=2 width=48)
                                                                                       Hash Cond: ((f0_10.n_name)::text = _temp_view_0_1.c0)
                                                                                       ->  Seq Scan on nation f0_10  (cost=0.00..1.25 rows=25 width=16)
                                                                                       ->  Hash  (cost=0.04..0.04 rows=2 width=64)
                                                                                             ->  CTE Scan on _temp_view_0 _temp_view_0_1  (cost=0.00..0.04 rows=2 width=64)
                                                                     ->  Bitmap Heap Scan on supplier f0_6  (cost=7.87..46.57 rows=400 width=16)
                                                                           Recheck Cond: (s_nationkey = f0_10.n_nationkey)
                                                                           ->  Bitmap Index Scan on fkey_10  (cost=0.00..7.77 rows=400 width=0)
                                                                                 Index Cond: (s_nationkey = f0_10.n_nationkey)
                                                               ->  Index Scan using fkey_5 on lineitem f0_7  (cost=0.43..65.57 rows=188 width=36)
                                                                     Index Cond: (l_suppkey = f0_6.s_suppkey)
                                                                     Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                             ->  Hash  (cost=5273.00..5273.00 rows=150000 width=16)
                                                   ->  Seq Scan on customer f0_9  (cost=0.00..5273.00 rows=150000 width=16)
                           ->  Materialize  (cost=0.03..0.06 rows=1 width=144)
                                 ->  Unique  (cost=0.03..0.05 rows=1 width=152)
                                       ->  Sort  (cost=0.03..0.04 rows=1 width=152)
                                             Sort Key: _temp_view_2.x1, _temp_view_2.x2, _temp_view_2.x3, _temp_view_2.x4
                                             ->  CTE Scan on _temp_view_2  (cost=0.00..0.02 rows=1 width=152)
(79 rows)

Time: 14.517 ms