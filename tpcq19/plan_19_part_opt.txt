Timing is on.
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Unique  (cost=14966.35..14966.37 rows=1 width=125)
   ->  Sort  (cost=14966.35..14966.35 rows=1 width=125)
         Sort Key: f0.p_partkey, f0.p_name, f0.p_mfgr, f0.p_brand, f0.p_type, f0.p_size, f0.p_container, f0.p_retailprice, f0.p_comment
         ->  Nested Loop  (cost=1002.59..14966.34 rows=1 width=125)
               ->  Nested Loop  (cost=1002.59..14965.32 rows=1 width=125)
                     Join Filter: (((1) = (1)) AND ((f0_3.p_brand)::text = ('Brand#12'::text)))
                     ->  Nested Loop  (cost=1002.50..14965.12 rows=1 width=146)
                           ->  Gather  (cost=1002.08..14964.67 rows=1 width=29)
                                 Workers Planned: 2
                                 ->  Nested Loop  (cost=2.07..13964.57 rows=1 width=29)
                                       ->  Hash Join  (cost=1.64..13532.97 rows=506 width=53)
                                             Hash Cond: ((1) = (1))
                                             Join Filter: ((f0_2.l_quantity >= ((1))::double precision) AND (f0_2.l_quantity >= ((11))::double precision))
                                             ->  Hash Join  (cost=1.45..13492.95 rows=4551 width=57)
                                                   Hash Cond: ((f0_2.l_shipmode)::text = ('AIR'::text))
                                                   ->  Nested Loop  (cost=1.33..13425.72 rows=15928 width=62)
                                                         ->  Hash Join  (cost=0.90..5523.82 rows=2083 width=25)
                                                               Hash Cond: ((f0_3.p_container)::text = ('SM CASE'::text))
                                                               Join Filter: (f0_3.p_size <= ((5))::bigint)
                                                               ->  Parallel Seq Scan on part f0_3  (cost=0.00..5116.67 rows=83333 width=33)
                                                                     Filter: (p_size >= '1'::bigint)
                                                               ->  Hash  (cost=0.86..0.86 rows=3 width=44)
                                                                     ->  Hash Join  (cost=0.55..0.86 rows=3 width=44)
                                                                           Hash Cond: ((1) = (1))
                                                                           ->  HashAggregate  (cost=0.36..0.48 rows=12 width=36)
                                                                                 Group Key: (1), ('SM CASE'::text)
                                                                                 ->  Append  (cost=0.00..0.30 rows=12 width=36)
                                                                                       ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                       ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                       ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                       ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                       ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                       ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                       ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                       ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                       ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                       ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                       ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                       ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                           ->  Hash  (cost=0.15..0.15 rows=3 width=8)
                                                                                 ->  HashAggregate  (cost=0.09..0.12 rows=3 width=8)
                                                                                       Group Key: (1), (5)
                                                                                       ->  Append  (cost=0.00..0.07 rows=3 width=8)
                                                                                             ->  Result  (cost=0.00..0.01 rows=1 width=8)
                                                                                             ->  Result  (cost=0.00..0.01 rows=1 width=8)
                                                                                             ->  Result  (cost=0.00..0.01 rows=1 width=8)
                                                         ->  Index Scan using fkey_4 on lineitem f0_2  (cost=0.43..3.71 rows=8 width=53)
                                                               Index Cond: (l_partkey = f0_3.p_partkey)
                                                               Filter: ((l_shipinstruct)::text = 'DELIVER IN PERSON'::text)
                                                   ->  Hash  (cost=0.09..0.09 rows=2 width=32)
                                                         ->  Unique  (cost=0.06..0.07 rows=2 width=32)
                                                               ->  Sort  (cost=0.06..0.07 rows=2 width=32)
                                                                     Sort Key: ('AIR'::text)
                                                                     ->  Append  (cost=0.00..0.05 rows=2 width=32)
                                                                           ->  Result  (cost=0.00..0.01 rows=1 width=32)
                                                                           ->  Result  (cost=0.00..0.01 rows=1 width=32)
                                             ->  Hash  (cost=0.16..0.16 rows=3 width=12)
                                                   ->  HashAggregate  (cost=0.10..0.13 rows=3 width=12)
                                                         Group Key: (1), (1), (11)
                                                         ->  Append  (cost=0.00..0.07 rows=3 width=12)
                                                               ->  Result  (cost=0.00..0.01 rows=1 width=12)
                                                               ->  Result  (cost=0.00..0.01 rows=1 width=12)
                                                               ->  Result  (cost=0.00..0.01 rows=1 width=12)
                                       ->  Index Scan using lineitem_pkey on lineitem f0_1  (cost=0.43..0.84 rows=1 width=40)
                                             Index Cond: ((l_orderkey = f0_2.l_orderkey) AND (l_linenumber = f0_2.l_linenumber))
                                             Filter: (((l_shipinstruct)::text = 'DELIVER IN PERSON'::text) AND (f0_2.l_extendedprice = l_extendedprice) AND (f0_2.l_discount = l_discount))
                           ->  Index Scan using part_pkey on part f0  (cost=0.42..0.45 rows=1 width=125)
                                 Index Cond: (p_partkey = f0_1.l_partkey)
                                 Filter: (p_size >= '1'::bigint)
                     ->  HashAggregate  (cost=0.09..0.12 rows=3 width=36)
                           Group Key: (1), ('Brand#12'::text)
                           ->  Append  (cost=0.00..0.07 rows=3 width=36)
                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
               ->  Seq Scan on rtpcq19 f0_4  (cost=0.00..1.01 rows=1 width=0)
(76 rows)

Time: 16.237 ms