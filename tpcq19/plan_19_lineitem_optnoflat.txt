Timing is on.
                                                                                                                        QUERY PLAN                                                                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Unique  (cost=7514.00..7514.04 rows=1 width=144)
   CTE _temp_view_0
     ->  Seq Scan on rtpcq19 f0_6  (cost=0.00..1.01 rows=1 width=8)
   ->  Sort  (cost=7512.99..7513.00 rows=1 width=144)
         Sort Key: f0.l_orderkey, f0.l_partkey, f0.l_suppkey, f0.l_linenumber, f0.l_quantity, f0.l_extendedprice, f0.l_discount, f0.l_tax, f0.l_returnflag, f0.l_linestatus, f0.l_shipdate, f0.l_commitdate, f0.l_receiptdate, f0.l_shipmode, f0.l_comment
         ->  Nested Loop  (cost=7075.45..7512.98 rows=1 width=144)
               ->  Unique  (cost=7075.02..7077.25 rows=49 width=32)
                     ->  Nested Loop  (cost=7075.02..7076.76 rows=49 width=32)
                           ->  Unique  (cost=7075.00..7075.61 rows=49 width=32)
                                 ->  Sort  (cost=7075.00..7075.12 rows=49 width=32)
                                       Sort Key: f0_2.l_orderkey, f0_2.l_linenumber, f0_2.l_discount, f0_2.l_extendedprice
                                       ->  Gather  (cost=1001.94..7073.62 rows=49 width=32)
                                             Workers Planned: 2
                                             ->  Hash Join  (cost=1.94..6068.72 rows=20 width=32)
                                                   Hash Cond: ((f0_2.l_shipmode)::text = ('AIR'::text))
                                                   ->  Nested Loop  (cost=1.83..6068.31 rows=71 width=37)
                                                         Join Filter: ((f0_2.l_quantity >= (f0_4."A0")::double precision) AND (f0_2.l_quantity >= (f0_4."A1")::double precision))
                                                         ->  Hash Join  (cost=1.40..5746.81 rows=83 width=16)
                                                               Hash Cond: (((f0_3.p_container)::text = f0_4."A2") AND ((f0_3.p_brand)::text = f0_4."A4"))
                                                               Join Filter: (f0_3.p_size <= (f0_4."A3")::bigint)
                                                               ->  Parallel Seq Scan on part f0_3  (cost=0.00..5116.67 rows=83333 width=33)
                                                                     Filter: (p_size >= '1'::bigint)
                                                               ->  Hash  (cost=1.35..1.35 rows=3 width=76)
                                                                     ->  Subquery Scan on f0_4  (cost=1.28..1.35 rows=3 width=76)
                                                                           ->  Unique  (cost=1.28..1.32 rows=3 width=76)
                                                                                 ->  Sort  (cost=1.28..1.28 rows=3 width=76)
                                                                                       Sort Key: (1), (11), ('SM CASE'::text), f0_5.c1, ('Brand#12'::text)
                                                                                       ->  Merge Join  (cost=1.08..1.25 rows=3 width=76)
                                                                                             Merge Cond: ((1) = (1))
                                                                                             ->  Unique  (cost=0.10..0.13 rows=3 width=12)
                                                                                                   ->  Sort  (cost=0.10..0.11 rows=3 width=12)
                                                                                                         Sort Key: (1), (1), (11)
                                                                                                         ->  Append  (cost=0.00..0.07 rows=3 width=12)
                                                                                                               ->  Result  (cost=0.00..0.01 rows=1 width=12)
                                                                                                               ->  Result  (cost=0.00..0.01 rows=1 width=12)
                                                                                                               ->  Result  (cost=0.00..0.01 rows=1 width=12)
                                                                                             ->  Materialize  (cost=0.99..1.07 rows=1 width=80)
                                                                                                   ->  Merge Join  (cost=0.99..1.07 rows=1 width=80)
                                                                                                         Merge Cond: ((1) = (1))
                                                                                                         ->  Unique  (cost=0.10..0.12 rows=3 width=36)
                                                                                                               ->  Sort  (cost=0.10..0.11 rows=3 width=36)
                                                                                                                     Sort Key: (1), ('Brand#12'::text)
                                                                                                                     ->  Append  (cost=0.00..0.07 rows=3 width=36)
                                                                                                                           ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                           ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                           ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                         ->  Sort  (cost=0.89..0.89 rows=3 width=44)
                                                                                                               Sort Key: (1)
                                                                                                               ->  Hash Join  (cost=0.55..0.86 rows=3 width=44)
                                                                                                                     Hash Cond: ((1) = f0_5.c0)
                                                                                                                     ->  HashAggregate  (cost=0.36..0.48 rows=12 width=36)
                                                                                                                           Group Key: (1), ('SM CASE'::text)
                                                                                                                           ->  Append  (cost=0.00..0.30 rows=12 width=36)
                                                                                                                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                                 ->  Result  (cost=0.00..0.01 rows=1 width=36)
                                                                                                                     ->  Hash  (cost=0.15..0.15 rows=3 width=8)
                                                                                                                           ->  Subquery Scan on f0_5  (cost=0.09..0.15 rows=3 width=8)
                                                                                                                                 ->  HashAggregate  (cost=0.09..0.12 rows=3 width=8)
                                                                                                                                       Group Key: (1), (5)
                                                                                                                                       ->  Append  (cost=0.00..0.07 rows=3 width=8)
                                                                                                                                             ->  Result  (cost=0.00..0.01 rows=1 width=8)
                                                                                                                                             ->  Result  (cost=0.00..0.01 rows=1 width=8)
                                                                                                                                             ->  Result  (cost=0.00..0.01 rows=1 width=8)
                                                         ->  Index Scan using fkey_4 on lineitem f0_2  (cost=0.43..3.71 rows=8 width=53)
                                                               Index Cond: (l_partkey = f0_3.p_partkey)
                                                               Filter: ((l_shipinstruct)::text = 'DELIVER IN PERSON'::text)
                                                   ->  Hash  (cost=0.09..0.09 rows=2 width=32)
                                                         ->  Unique  (cost=0.06..0.07 rows=2 width=32)
                                                               ->  Sort  (cost=0.06..0.07 rows=2 width=32)
                                                                     Sort Key: ('AIR'::text)
                                                                     ->  Append  (cost=0.00..0.05 rows=2 width=32)
                                                                           ->  Result  (cost=0.00..0.01 rows=1 width=32)
                                                                           ->  Result  (cost=0.00..0.01 rows=1 width=32)
                           ->  Materialize  (cost=0.02..0.05 rows=1 width=0)
                                 ->  Subquery Scan on f0_1  (cost=0.02..0.04 rows=1 width=0)
                                       ->  HashAggregate  (cost=0.02..0.03 rows=1 width=8)
                                             Group Key: _temp_view_0.x1
                                             ->  CTE Scan on _temp_view_0  (cost=0.00..0.02 rows=1 width=8)
               ->  Index Scan using fkey_2 on lineitem f0  (cost=0.43..8.87 rows=1 width=112)
                     Index Cond: (l_orderkey = f0_2.l_orderkey)
                     Filter: (((l_shipinstruct)::text = 'DELIVER IN PERSON'::text) AND (f0_2.l_linenumber = l_linenumber) AND (f0_2.l_discount = l_discount) AND (f0_2.l_extendedprice = l_extendedprice))
(91 rows)

Time: 10.283 ms